{"components":{"examples":{"CIRCLE_AREA_ENTERED":{"description":"The cloud event when a geofence area was entered.","value":{"data":{"area":{"areaType":"CIRCLE","center":{"latitude":50.735851,"longitude":7.10066},"radius":2000},"device":{"phoneNumber":123456789},"subscriptionId":987654321},"datacontenttype":"application/json","id":"123655","source":"https://notificationSendServer12.supertelco.com","specversion":"1.0","time":"2023-03-22T05:40:23.682000+00:00","type":"org.camaraproject.geofencing-subscriptions.v0.area-entered"}},"CIRCLE_AREA_LEFT":{"description":"The cloud event when a geofence area was left.","value":{"data":{"area":{"areaType":"CIRCLE","center":{"latitude":50.735851,"longitude":7.10066},"radius":2000},"device":{"phoneNumber":123456789},"subscriptionId":987654321},"datacontenttype":"application/json","id":"123655","source":"https://notificationSendServer12.supertelco.com","specversion":"1.0","time":"2023-03-22T05:40:23.682000+00:00","type":"org.camaraproject.geofencing-subscriptions.v0.area-left"}},"REQUEST_CIRCLE_AREA_ENTERED":{"description":"A sample geofence for entering for a circle area.","value":{"config":{"initialEvent":true,"subscriptionDetail":{"area":{"areaType":"CIRCLE","center":{"latitude":50.735851,"longitude":7.10066},"radius":2000},"device":{"phoneNumber":"+12345678912"}},"subscriptionExpireTime":"2024-03-22T05:40:58.469000+00:00","subscriptionMaxEvents":10},"protocol":"HTTP","sink":"https://notificationSendServer12.supertelco.com","types":["org.camaraproject.geofencing-subscriptions.v0.area-entered"]}},"SUBSCRIPTION_ENDS":{"description":"The cloud event when a geofence subscription ends.","value":{"data":{"area":{"areaType":"CIRCLE","center":{"latitude":50.735851,"longitude":7.10066},"radius":2000},"device":{"phoneNumber":123456789},"subscriptionId":987654321,"terminationReason":"SUBSCRIPTION_EXPIRED"},"datacontenttype":"application/json","id":"123655","source":"https://notificationSendServer12.supertelco.com","specversion":"1.0","time":"2023-03-22T05:40:23.682000+00:00","type":"org.camaraproject.geofencing-subscriptions.v0.subscription-ends"}},"SUBSCRIPTION_UNPROCESSABLE":{"description":"The cloud event when the subscription process was aborted.","value":{"data":{"area":{"areaType":"CIRCLE","center":{"latitude":50.735851,"longitude":7.10066},"radius":2000},"device":{"phoneNumber":123456789},"terminationDescription":"The requested area cannot be covered by the network.","terminationReason":"SUBSCRIPTION_UNPROCESSABLE"},"datacontenttype":"application/json","id":"123655","source":"https://notificationSendServer12.supertelco.com","specversion":"1.0","time":"2023-03-22T05:40:23.682000+00:00","type":"org.camaraproject.geofencing-subscriptions.v0.subscription-ends"}}},"headers":{"x-correlator":{"description":"Correlation id for the different services.","explode":false,"schema":{"pattern":"^[a-zA-Z0-9-]{0,55}$","type":"string"},"style":"simple"}},"parameters":{"SubscriptionId":{"description":"Subscription identifier that was obtained from the create event subscription operation.","explode":false,"in":"path","name":"subscriptionId","required":true,"schema":{"$ref":"#/components/schemas/SubscriptionId"},"style":"simple"},"x-correlator":{"description":"Correlation id for the different services.","explode":false,"in":"header","name":"x-correlator","required":false,"schema":{"pattern":"^[a-zA-Z0-9-]{0,55}$","type":"string"},"style":"simple"}},"responses":{"CreateSubscriptionBadRequest400":{"content":{"application/json":{"examples":{"GENERIC_400_INVALID_ARGUMENT":{"value":{"code":"INVALID_ARGUMENT","message":"Client specified an invalid argument, request body or query param.","status":400}},"GENERIC_400_INVALID_CREDENTIAL":{"value":{"code":"INVALID_CREDENTIAL","message":"Only Access token is supported.","status":400}},"GENERIC_400_INVALID_PROTOCOL":{"value":{"code":"INVALID_PROTOCOL","message":"Only HTTP is supported.","status":400}},"GENERIC_400_INVALID_TOKEN":{"value":{"code":"INVALID_TOKEN","message":"Only bearer token is supported.","status":400}}},"schema":{"$ref":"#/components/schemas/createSubscription_400_response"}}},"description":"Problem with the client request.","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"CreateSubscriptionUnprocessableEntity422":{"content":{"application/json":{"examples":{"GENERIC_422_IDENTIFIER_MISMATCH":{"description":"Inconsistency between device identifiers not pointing to the same device.","value":{"code":"IDENTIFIER_MISMATCH","message":"Provided identifiers are not consistent.","status":422}},"GENERIC_422_MISSING_IDENTIFIER":{"description":"An identifier is not included in the request and the device or phone number identification cannot be derived from the 3-legged access token","value":{"code":"MISSING_IDENTIFIER","message":"The device cannot be identified.","status":422}},"GENERIC_422_MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED":{"value":{"code":"MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED","message":"Multi event types subscription not managed.","status":422}},"GENERIC_422_SERVICE_NOT_APPLICABLE":{"description":"Service not applicable for the provided identifier","value":{"code":"SERVICE_NOT_APPLICABLE","message":"The service is not available for the provided identifier.","status":422}},"GENERIC_422_UNNECESSARY_IDENTIFIER":{"description":"An explicit identifier is provided when a device or phone number has already been identified from the access token","value":{"code":"UNNECESSARY_IDENTIFIER","message":"The device is already identified by the access token.","status":422}},"GENERIC_422_UNSUPPORTED_IDENTIFIER":{"description":"None of the provided identifiers is supported by the implementation","value":{"code":"UNSUPPORTED_IDENTIFIER","message":"The identifier provided is not supported.","status":422}},"GEOFENCING_422_AREA_NOT_COVERED":{"description":"The system is not able cover the requested area","summary":"The area cannot be covered","value":{"code":"GEOFENCING_SUBSCRIPTIONS.AREA_NOT_COVERED","message":"Unable to cover the requested area","status":422}},"GEOFENCING_422_INVALID_AREA":{"description":"The requested area is too small to be supported by the system.","summary":"Invalid area","value":{"code":"GEOFENCING_SUBSCRIPTIONS.INVALID_AREA","message":"The requested area is too small","status":422}}},"schema":{"$ref":"#/components/schemas/createSubscription_422_response"}}},"description":"Unprocessable Entity","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"Generic400":{"content":{"application/json":{"examples":{"GENERIC_400_INVALID_ARGUMENT":{"description":"Invalid Argument. Generic Syntax Exception","value":{"code":"INVALID_ARGUMENT","message":"Client specified an invalid argument, request body or query param.","status":400}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscriptionList_400_response"}}},"description":"Bad Request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"Generic401":{"content":{"application/json":{"examples":{"GENERIC_401_AUTHENTICATION_REQUIRED":{"description":"New authentication is needed, authentication is no longer valid","value":{"code":"AUTHENTICATION_REQUIRED","message":"New authentication is required.","status":401}},"GENERIC_401_UNAUTHENTICATED":{"description":"Request cannot be authenticated","value":{"code":"UNAUTHENTICATED","message":"Request not authenticated due to missing, invalid, or expired credentials.","status":401}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscriptionList_401_response"}}},"description":"Authentication problem with the client request.","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"Generic403":{"content":{"application/json":{"examples":{"GENERIC_403_PERMISSION_DENIED":{"description":"Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security","value":{"code":"PERMISSION_DENIED","message":"Client does not have sufficient permissions to perform this action.","status":403}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscriptionList_403_response"}}},"description":"Client does not have sufficient permission","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"Generic404":{"content":{"application/json":{"examples":{"GENERIC_404_NOT_FOUND":{"description":"Resource is not found","value":{"code":"NOT_FOUND","message":"The specified resource is not found.","status":404}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscription_404_response"}}},"description":"Not found","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"Generic410":{"content":{"application/json":{"examples":{"GENERIC_410_GONE":{"description":"Use in notifications flow to allow API Consumer to indicate that its callback is no longer available","value":{"code":"GONE","message":"Access to the target resource is no longer available.","status":410}}},"schema":{"$ref":"#/components/schemas/postNotification_410_response"}}},"description":"Gone","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"Generic429":{"content":{"application/json":{"examples":{"GENERIC_429_QUOTA_EXCEEDED":{"description":"Request is rejected due to exceeding a business quota limit","value":{"code":"QUOTA_EXCEEDED","message":"Out of resource quota.","status":429}},"GENERIC_429_TOO_MANY_REQUESTS":{"description":"Access to the API has been temporarily blocked due to rate or spike arrest limits being reached","value":{"code":"TOO_MANY_REQUESTS","message":"Rate limit reached.","status":429}}},"schema":{"$ref":"#/components/schemas/createSubscription_429_response"}}},"description":"Too Many Requests","headers":{"X-Correlator":{"$ref":"#/components/headers/x-correlator"}}},"SubscriptionIdRequired":{"content":{"application/json":{"examples":{"GENERIC_400_INVALID_ARGUMENT":{"summary":"Schema validation failed","value":{"code":"INVALID_ARGUMENT","message":"Client specified an invalid argument, request body or query param.","status":400}},"GENERIC_400_SUBSCRIPTION_ID_REQUIRED":{"summary":"The subscription id is required","value":{"code":"INVALID_ARGUMENT","message":"Expected property is missing: subscriptionId","status":400}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscriptionList_400_response"}}},"description":"Problem with the client request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"SubscriptionPermissionDenied403":{"content":{"application/json":{"examples":{"GENERIC_403_PERMISSION_DENIED":{"value":{"code":"PERMISSION_DENIED","message":"Client does not have sufficient permissions to perform this action.","status":403}},"GENERIC_403_TOKEN_MISMATCH":{"value":{"code":"SUBSCRIPTION_MISMATCH","message":"Inconsistent access token for requested events subscription.","status":403}}},"schema":{"$ref":"#/components/schemas/inline_object"}}},"description":"Client does not have sufficient permission.","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}}},"schemas":{"AMQPSettings":{"properties":{"address":{"title":"address","type":"string"},"linkName":{"title":"linkName","type":"string"},"linkProperties":{"additionalProperties":{"type":"string"},"title":"linkProperties","type":"object"},"senderSettlementMode":{"enum":["settled","unsettled"],"title":"senderSettlementMode","type":"string"}},"title":"AMQPSettings","type":"object"},"AMQPSubscriptionRequest":{"allOf":[{"$ref":"#/components/schemas/SubscriptionRequest"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/AMQPSettings"}},"type":"object"}]},"AMQPSubscriptionResponse":{"allOf":[{"$ref":"#/components/schemas/Subscription"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/AMQPSettings"}},"type":"object"}]},"AccessTokenCredential":{"allOf":[{"$ref":"#/components/schemas/SinkCredential"},{"properties":{"accessToken":{"description":"REQUIRED. An access token is a previously acquired token granting access to the target resource.","type":"string"},"accessTokenExpiresUtc":{"description":"REQUIRED. An absolute (UTC) timestamp at which the token shall be considered expired.\nIn the case of an ACCESS_TOKEN_EXPIRED termination reason, implementation should notify the client before the expiration date.\nIf the access token is a JWT and registered \"exp\" (Expiration Time) claim is present, the two expiry times should match.\nIt must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.\nRecommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)\n","example":"2023-07-03T12:27:08.312000+00:00","format":"date-time","type":"string"},"accessTokenType":{"description":"REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)).","enum":["bearer"],"type":"string"}},"required":["accessToken","accessTokenExpiresUtc","accessTokenType"],"type":"object"}],"description":"An access token credential.","type":"object"},"ApacheKafkaSettings":{"properties":{"ackMode":{"title":"ackMode","type":"integer"},"clientId":{"title":"clientId","type":"string"},"partitionKeyExtractor":{"title":"partitionKeyExtractor","type":"string"},"topicName":{"title":"topicName","type":"string"}},"required":["topicName"],"title":"ApacheKafkaSettings","type":"object"},"ApacheKafkaSubscriptionRequest":{"allOf":[{"$ref":"#/components/schemas/SubscriptionRequest"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/ApacheKafkaSettings"}},"type":"object"}]},"ApacheKafkaSubscriptionResponse":{"allOf":[{"$ref":"#/components/schemas/Subscription"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/ApacheKafkaSettings"}},"type":"object"}]},"Area":{"discriminator":{"mapping":{"CIRCLE":"#/components/schemas/Circle"},"propertyName":"areaType"},"example":{"areaType":"CIRCLE"},"properties":{"areaType":{"$ref":"#/components/schemas/AreaType"}},"required":["areaType"],"title":"Area","type":"object"},"AreaEntered":{"description":"Event detail structure for org.camaraproject.geofencing-subscriptions.v0.area-entered event.\nNote that the device object is defined as optional and will only to be returned if provided in createSubscription.\nIf more than one type of device identifier was provided, only one identifier will be returned\n(at implementation choice and with the original value provided in createSubscription).\n","properties":{"area":{"$ref":"#/components/schemas/Area"},"device":{"$ref":"#/components/schemas/Device"},"subscriptionId":{"description":"The unique identifier of the subscription in the scope of the subscription manager. When this information is contained within an event notification, this concept SHALL be referred as `subscriptionId` as per [Commonalities Event Notification Model](https://github.com/camaraproject/Commonalities/blob/main/documentation/API-design-guidelines.md#122-event-notification).","example":"qs15-h556-rt89-1298","title":"SubscriptionId","type":"string"}},"required":["area","subscriptionId"],"title":"AreaEntered","type":"object"},"AreaLeft":{"description":"Event detail structure for org.camaraproject.geofencing-subscriptions.v0.area-left event.\nNote that the device object is defined as optional and will only to be returned if provided in createSubscription.\nIf more than one type of device identifier was provided, only one identifier will be returned\n(at implementation choice and with the original value provided in createSubscription).\n","properties":{"area":{"$ref":"#/components/schemas/Area"},"device":{"$ref":"#/components/schemas/Device"},"subscriptionId":{"description":"The unique identifier of the subscription in the scope of the subscription manager. When this information is contained within an event notification, this concept SHALL be referred as `subscriptionId` as per [Commonalities Event Notification Model](https://github.com/camaraproject/Commonalities/blob/main/documentation/API-design-guidelines.md#122-event-notification).","example":"qs15-h556-rt89-1298","title":"SubscriptionId","type":"string"}},"required":["area","subscriptionId"],"title":"AreaLeft","type":"object"},"AreaType":{"description":"Type of this area.\nCIRCLE - The area is defined as a circle.\n","enum":["CIRCLE"],"title":"AreaType","type":"string"},"Circle":{"allOf":[{"$ref":"#/components/schemas/Area"},{"properties":{"center":{"$ref":"#/components/schemas/Point"},"radius":{"description":"Expected accuracy for the subscription event of device location, in meters from `center`.\nNote: The area surface could be restricted locally depending on regulations. Implementations may enforce a larger minimum radius (e.g. 1000 meters).\n","maximum":200000,"minimum":1,"type":"integer"}},"required":["center","radius"],"type":"object"}],"description":"Circular area","example":{"areaType":"CIRCLE","center":{"latitude":50.735851,"longitude":7.10066},"radius":50000}},"CloudEvent":{"description":"The notification callback.","discriminator":{"mapping":{"org.camaraproject.geofencing-subscriptions.v0.area-entered":"#/components/schemas/EventAreaEntered","org.camaraproject.geofencing-subscriptions.v0.area-left":"#/components/schemas/EventAreaLeft","org.camaraproject.geofencing-subscriptions.v0.subscription-ends":"#/components/schemas/EventSubscriptionEnds"},"propertyName":"type"},"properties":{"data":{"description":"Event details payload described in each CAMARA API and referenced by its type.","title":"data","type":"object"},"datacontenttype":{"description":"media-type that describes the event payload encoding, must be \"application/json\" for CAMARA APIs","enum":["application/json"],"title":"datacontenttype","type":"string"},"id":{"description":"Identifier of this event, that must be unique in the source context.","title":"id","type":"string"},"source":{"description":"Identifies the context in which an event happened - be a non-empty `URI-reference` like:\n- URI with a DNS authority:\n  * https://github.com/cloudevents\n  * mailto:cncf-wg-serverless@lists.cncf.io\n- Universally-unique URN with a UUID:\n  * urn:uuid:6e8bc430-9c3a-11d9-9669-0800200c9a66\n- Application-specific identifier:\n  * /cloudevents/spec/pull/123\n  * 1-555-123-4567\n","example":"https://notificationSendServer12.supertelco.com","format":"uri-reference","minLength":1,"title":"source","type":"string"},"specversion":{"description":"Version of the specification to which this event conforms (must be 1.0 if it conforms to cloudevents 1.0.2 version).","enum":["1.0"],"title":"specversion","type":"string"},"time":{"description":"Timestamp of when the occurrence happened. Must adhere to RFC 3339.","example":"2018-04-05T17:31:00+00:00","format":"date-time","title":"time","type":"string"},"type":{"$ref":"#/components/schemas/NotificationEventType"}},"required":["data","id","source","specversion","time","type"],"title":"CloudEvent"},"Config":{"description":"Implementation-specific configuration parameters are needed by the subscription manager for acquiring events.\nIn CAMARA we have predefined attributes like `subscriptionExpireTime`, `subscriptionMaxEvents`, `initialEvent`.\nSpecific event type attributes must be defined in `subscriptionDetail`.\nNote: If a request is performed for several event types, all subscribed events will use the same `config` parameters.\n","example":{"initialEvent":true,"subscriptionDetail":{"area":{"areaType":"CIRCLE"},"device":{"ipv4Address":{"publicAddress":"84.125.93.10","publicPort":59765},"ipv6Address":"2001:db8:85a3:8d3:1319:8a2e:370:7344","networkAccessIdentifier":"123456789@domain.com","phoneNumber":"+123456789"}},"subscriptionExpireTime":"2023-01-17T13:18:23.682000+00:00","subscriptionMaxEvents":5},"properties":{"initialEvent":{"description":"Set to `true` by API consumer if consumer wants to get an event as soon as the subscription is created and current situation reflects event request.\nExample: Consumer request area entered event. If consumer sets initialEvent to true and device is already in the geofence, an event is triggered.\n","title":"initialEvent","type":"boolean"},"subscriptionDetail":{"$ref":"#/components/schemas/SubscriptionDetail"},"subscriptionExpireTime":{"description":"The subscription expiration time (in date-time format) requested by the API consumer.","example":"2023-01-17T13:18:23.682000+00:00","format":"date-time","title":"subscriptionExpireTime","type":"string"},"subscriptionMaxEvents":{"description":"Identifies the maximum number of event reports to be generated (>=1) requested by the API consumer - Once this number is reached, the subscription ends.\nNote on combined usage of `initialEvent` and `subscriptionMaxEvents`:\nIf an event is triggered following `initialEvent` set to `true`, this event will be counted towards `subscriptionMaxEvents`.\n","example":5,"minimum":1,"title":"subscriptionMaxEvents","type":"integer"}},"required":["subscriptionDetail"],"title":"Config","type":"object"},"DateTime":{"description":"Timestamp of when the occurrence happened. Must adhere to RFC 3339.","example":"2018-04-05T17:31:00+00:00","format":"date-time","title":"time","type":"string"},"Device":{"description":"End-user device able to connect to a mobile network. Examples of devices include smartphones or IoT sensors/actuators.\n\nThe developer can choose to provide the below specified device identifiers:\n\n* `ipv4Address`\n* `ipv6Address`\n* `phoneNumber`\n* `networkAccessIdentifier`\n\nNOTE1: the API provider might support only a subset of these options. The API consumer can provide multiple identifiers to be compatible across different API providers. In this case the identifiers MUST belong to the same device\nNOTE2: for the Commonalities release v0.4, we are enforcing that the networkAccessIdentifier is only part of the schema for future-proofing, and CAMARA does not currently allow its use. After the CAMARA meta-release work is concluded and the relevant issues are resolved, its use will need to be explicitly documented in the guidelines.\n","example":{"ipv4Address":{"publicAddress":"84.125.93.10","publicPort":59765},"ipv6Address":"2001:db8:85a3:8d3:1319:8a2e:370:7344","networkAccessIdentifier":"123456789@domain.com","phoneNumber":"+123456789"},"minProperties":1,"properties":{"ipv4Address":{"$ref":"#/components/schemas/DeviceIpv4Addr"},"ipv6Address":{"description":"The device should be identified by the observed IPv6 address, or by any single IPv6 address from within the subnet allocated to the device (e.g. adding ::0 to the /64 prefix).\n","example":"2001:db8:85a3:8d3:1319:8a2e:370:7344","format":"ipv6","title":"DeviceIpv6Address","type":"string"},"networkAccessIdentifier":{"description":"A public identifier addressing a subscription in a mobile network. In 3GPP terminology, it corresponds to the GPSI formatted with the External Identifier ({Local Identifier}@{Domain Identifier}). Unlike the telephone number, the network access identifier is not subjected to portability ruling in force, and is individually managed by each operator.","example":"123456789@domain.com","title":"NetworkAccessIdentifier","type":"string"},"phoneNumber":{"description":"A public identifier addressing a telephone subscription. In mobile networks, it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.","example":"+123456789","pattern":"^\\+[1-9][0-9]{4,14}$","title":"PhoneNumber","type":"string"}},"title":"Device","type":"object"},"DeviceIpv4Addr":{"anyOf":[],"description":"The device should be identified by either the public (observed) IP address and port as seen by the application server, or the private (local) and any public (observed) IP addresses in use by the device (this information can be obtained by various means, for example from some DNS servers).\n\nIf the allocated and observed IP addresses are the same (i.e. NAT is not in use) then  the same address should be specified for both publicAddress and privateAddress.\n\nIf NAT64 is in use, the device should be identified by its publicAddress and publicPort, or separately by its allocated IPv6 address (field ipv6Address of the Device object)\n\nIn all cases, publicAddress must be specified, along with at least one of either privateAddress or publicPort, dependent upon which is known. In general, mobile devices cannot be identified by their public IPv4 address alone.\n","example":{"publicAddress":"84.125.93.10","publicPort":59765},"nullable":true,"properties":{"privateAddress":{"description":"A single IPv4 address with no subnet mask.","example":"84.125.93.10","format":"ipv4","type":"string"},"publicAddress":{"description":"A single IPv4 address with no subnet mask.","example":"84.125.93.10","format":"ipv4","type":"string"},"publicPort":{"description":"TCP or UDP port number.","maximum":65535,"minimum":0,"type":"integer"}},"title":"DeviceIpv4Addr","type":"object"},"DeviceIpv6Address":{"description":"The device should be identified by the observed IPv6 address, or by any single IPv6 address from within the subnet allocated to the device (e.g. adding ::0 to the /64 prefix).\n","example":"2001:db8:85a3:8d3:1319:8a2e:370:7344","format":"ipv6","title":"DeviceIpv6Address","type":"string"},"ErrorInfo":{"description":"The error info object for possible error cases.","properties":{"code":{"description":"Code given to this error.","title":"code","type":"string"},"message":{"description":"Detailed error description.","title":"message","type":"string"},"status":{"description":"HTTP response status code.","title":"status","type":"integer"}},"required":["code","message","status"],"title":"ErrorInfo","type":"object"},"EventAreaEntered":{"allOf":[{"$ref":"#/components/schemas/CloudEvent"},{"properties":{"data":{"$ref":"#/components/schemas/AreaEntered"}},"type":"object"}],"description":"Event structure for event when the device enters the area."},"EventAreaLeft":{"allOf":[{"$ref":"#/components/schemas/CloudEvent"},{"properties":{"data":{"$ref":"#/components/schemas/AreaLeft"}},"type":"object"}],"description":"Event structure for event when the device leaves the area."},"EventSubscriptionEnds":{"allOf":[{"$ref":"#/components/schemas/CloudEvent"},{"properties":{"data":{"$ref":"#/components/schemas/SubscriptionEnds"}},"type":"object"}],"description":"Event structure for event subscription ends."},"HTTPSettings":{"properties":{"headers":{"additionalProperties":{"type":"string"},"description":"A set of key/value pairs that is copied into the HTTP request as custom headers.\n\nNOTE: Use/Applicability of this concept has not been discussed in Commonalities under the scope of Meta Release v0.4. When required by an API project as an option to meet a UC/Requirement, please generate an issue for Commonalities discussion about it.","title":"headers","type":"object"},"method":{"description":"The HTTP method to use for sending the message.","enum":["POST"],"title":"method","type":"string"}},"title":"HTTPSettings","type":"object"},"HTTPSubscriptionRequest":{"allOf":[{"$ref":"#/components/schemas/SubscriptionRequest"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/HTTPSettings"}},"type":"object"}]},"HTTPSubscriptionResponse":{"allOf":[{"$ref":"#/components/schemas/Subscription"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/HTTPSettings"}},"type":"object"}]},"Latitude":{"description":"Latitude component of a location.","example":50.735851,"format":"double","maximum":90,"minimum":-90,"type":"number"},"Longitude":{"description":"Longitude component of location.","example":7.10066,"format":"double","maximum":180,"minimum":-180,"type":"number"},"MQTTSettings":{"properties":{"expiry":{"format":"int32","title":"expiry","type":"integer"},"qos":{"format":"int32","title":"qos","type":"integer"},"retain":{"title":"retain","type":"boolean"},"topicName":{"title":"topicName","type":"string"},"userProperties":{"title":"userProperties","type":"object"}},"required":["topicName"],"title":"MQTTSettings","type":"object"},"MQTTSubscriptionRequest":{"allOf":[{"$ref":"#/components/schemas/SubscriptionRequest"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/MQTTSettings"}},"type":"object"}]},"MQTTSubscriptionResponse":{"allOf":[{"$ref":"#/components/schemas/Subscription"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/MQTTSettings"}},"type":"object"}]},"NATSSettings":{"properties":{"subject":{"title":"subject","type":"string"}},"required":["subject"],"title":"NATSSettings","type":"object"},"NATSSubscriptionRequest":{"allOf":[{"$ref":"#/components/schemas/SubscriptionRequest"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/NATSSettings"}},"type":"object"}]},"NATSSubscriptionResponse":{"allOf":[{"$ref":"#/components/schemas/Subscription"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/NATSSettings"}},"type":"object"}]},"NetworkAccessIdentifier":{"description":"A public identifier addressing a subscription in a mobile network. In 3GPP terminology, it corresponds to the GPSI formatted with the External Identifier ({Local Identifier}@{Domain Identifier}). Unlike the telephone number, the network access identifier is not subjected to portability ruling in force, and is individually managed by each operator.","example":"123456789@domain.com","title":"NetworkAccessIdentifier","type":"string"},"NotificationEventType":{"description":"area-entered - Event triggered when the device enters the given area\n\narea-left - Event triggered when the device leaves the given area\n\nsubscription-ends - Event triggered when the subscription ends\n","enum":["org.camaraproject.geofencing-subscriptions.v0.area-entered","org.camaraproject.geofencing-subscriptions.v0.area-left","org.camaraproject.geofencing-subscriptions.v0.subscription-ends"],"title":"NotificationEventType","type":"string"},"PhoneNumber":{"description":"A public identifier addressing a telephone subscription. In mobile networks, it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.","example":"+123456789","pattern":"^\\+[1-9][0-9]{4,14}$","title":"PhoneNumber","type":"string"},"PlainCredential":{"allOf":[{"$ref":"#/components/schemas/SinkCredential"},{"properties":{"identifier":{"description":"The identifier might be an account or username.","type":"string"},"secret":{"description":"The secret might be a password or passphrase.","type":"string"}},"required":["identifier","secret"],"type":"object"}],"description":"A plain credential as a combination of an identifier and a secret.","type":"object"},"Point":{"description":"Coordinates (latitude, longitude) defining a location in a map.","example":{"latitude":50.735851,"longitude":7.10066},"properties":{"latitude":{"description":"Latitude component of a location.","example":50.735851,"format":"double","maximum":90,"minimum":-90,"type":"number"},"longitude":{"description":"Longitude component of location.","example":7.10066,"format":"double","maximum":180,"minimum":-180,"type":"number"}},"required":["latitude","longitude"],"title":"Point","type":"object"},"Port":{"description":"TCP or UDP port number.","maximum":65535,"minimum":0,"type":"integer"},"Protocol":{"description":"Identifier of a delivery protocol. Only HTTP is allowed for now.","enum":["HTTP","MQTT3","MQTT5","AMQP","NATS","KAFKA"],"example":"HTTP","title":"Protocol","type":"string"},"RefreshTokenCredential":{"allOf":[{"$ref":"#/components/schemas/SinkCredential"},{"properties":{"accessToken":{"description":"REQUIRED. An access token is a previously acquired token granting access to the target resource.","type":"string"},"accessTokenExpiresUtc":{"description":"REQUIRED. An absolute UTC instant at which the token shall be considered expired.","format":"date-time","type":"string"},"accessTokenType":{"description":"REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)).","enum":["bearer"],"type":"string"},"refreshToken":{"description":"REQUIRED. An refresh token credential used to acquire access tokens.","type":"string"},"refreshTokenEndpoint":{"description":"REQUIRED. A URL at which the refresh token can be traded for an access token.","format":"uri","type":"string"}},"type":"object"}],"description":"An access token credential with a refresh token.","required":["accessToken","accessTokenExpiresUtc","accessTokenType","refreshToken","refreshTokenEndpoint"],"type":"object"},"SingleIpv4Addr":{"description":"A single IPv4 address with no subnet mask.","example":"84.125.93.10","format":"ipv4","type":"string"},"SinkCredential":{"description":"A sink credential provides authentication or authorization information necessary to enable delivery of events to a target.","discriminator":{"mapping":{"ACCESSTOKEN":"#/components/schemas/AccessTokenCredential","PLAIN":"#/components/schemas/PlainCredential","REFRESHTOKEN":"#/components/schemas/RefreshTokenCredential"},"propertyName":"credentialType"},"example":{"credentialType":"PLAIN"},"properties":{"credentialType":{"description":"The type of the credential.\nNote: Type of the credential - MUST be set to ACCESSTOKEN for now\n","enum":["PLAIN","ACCESSTOKEN","REFRESHTOKEN"],"title":"credentialType","type":"string"}},"required":["credentialType"],"title":"SinkCredential","type":"object"},"Source":{"description":"Identifies the context in which an event happened - be a non-empty `URI-reference` like:\n- URI with a DNS authority:\n  * https://github.com/cloudevents\n  * mailto:cncf-wg-serverless@lists.cncf.io\n- Universally-unique URN with a UUID:\n  * urn:uuid:6e8bc430-9c3a-11d9-9669-0800200c9a66\n- Application-specific identifier:\n  * /cloudevents/spec/pull/123\n  * 1-555-123-4567\n","example":"https://notificationSendServer12.supertelco.com","format":"uri-reference","minLength":1,"title":"source","type":"string"},"Subscription":{"description":"Represents a event-type subscription.","discriminator":{"mapping":{"AMQP":"#/components/schemas/AMQPSubscriptionResponse","HTTP":"#/components/schemas/HTTPSubscriptionResponse","KAFKA":"#/components/schemas/ApacheKafkaSubscriptionResponse","MQTT3":"#/components/schemas/MQTTSubscriptionResponse","MQTT5":"#/components/schemas/MQTTSubscriptionResponse","NATS":"#/components/schemas/NATSSubscriptionResponse"},"propertyName":"protocol"},"example":{"config":{"initialEvent":true,"subscriptionDetail":{"area":{"areaType":"CIRCLE"},"device":{"ipv4Address":{"publicAddress":"84.125.93.10","publicPort":59765},"ipv6Address":"2001:db8:85a3:8d3:1319:8a2e:370:7344","networkAccessIdentifier":"123456789@domain.com","phoneNumber":"+123456789"}},"subscriptionExpireTime":"2023-01-17T13:18:23.682000+00:00","subscriptionMaxEvents":5},"expiresAt":"2023-07-03T12:27:08.312000+00:00","id":"1119920371","protocol":"HTTP","sink":"https://endpoint.example.com/sink","startsAt":"2023-07-03T12:27:08.312000+00:00","status":"ACTIVATION_REQUESTED","types":["types","types"]},"properties":{"config":{"$ref":"#/components/schemas/Config"},"expiresAt":{"description":"Date when the event subscription will expire. Only provided when `subscriptionExpireTime` is indicated by API client or Telco Operator has specific policy about that.\nIt must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.\nRecommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)\n","example":"2023-07-03T12:27:08.312000+00:00","format":"date-time","title":"expiresAt","type":"string"},"id":{"description":"The unique identifier of the subscription in the scope of the subscription manager. When this information is contained within an event notification, this concept SHALL be referred as `subscriptionId` as per [Commonalities Event Notification Model](https://github.com/camaraproject/Commonalities/blob/main/documentation/API-design-guidelines.md#122-event-notification).","example":"1119920371","title":"id","type":"string"},"protocol":{"$ref":"#/components/schemas/Protocol"},"sink":{"description":"The address to which events shall be delivered using the selected protocol.","example":"https://endpoint.example.com/sink","format":"uri","title":"sink","type":"string"},"startsAt":{"description":"Date when the event subscription will begin/began\nIt must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.\nRecommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)\n","example":"2023-07-03T12:27:08.312000+00:00","format":"date-time","title":"startsAt","type":"string"},"status":{"description":"Current status of the subscription - Management of Subscription State engine is not mandatory for now. Note not all statuses may be considered to be implemented. Details:\n  - `ACTIVATION_REQUESTED`: Subscription creation (POST) is triggered but subscription creation process is not finished yet.\n  - `ACTIVE`: Subscription creation process is completed. Subscription is fully operative.\n  - `INACTIVE`: Subscription is temporarily inactive, but its workflow logic is not deleted.\n  - `EXPIRED`: Subscription is ended (no longer active). This status applies when subscription is ended due to `SUBSCRIPTION_EXPIRED` or `ACCESS_TOKEN_EXPIRED` event.\n  - `DELETED`: Subscription is ended as deleted (no longer active). This status applies when subscription information is kept (i.e. subscription workflow is no longer active but its meta-information is kept).","enum":["ACTIVATION_REQUESTED","ACTIVE","EXPIRED","INACTIVE","DELETED"],"title":"status","type":"string"},"types":{"description":"Camara Event types eligible to be delivered by this subscription.\n","items":{"type":"string"},"title":"types","type":"array"}},"required":["config","id","protocol","sink","startsAt","types"],"title":"Subscription","type":"object"},"SubscriptionAsync":{"description":"Response for an event-type subscription request managed asynchronously (Creation or Deletion).","example":{"id":"qs15-h556-rt89-1298"},"properties":{"id":{"description":"The unique identifier of the subscription in the scope of the subscription manager. When this information is contained within an event notification, this concept SHALL be referred as `subscriptionId` as per [Commonalities Event Notification Model](https://github.com/camaraproject/Commonalities/blob/main/documentation/API-design-guidelines.md#122-event-notification).","example":"qs15-h556-rt89-1298","title":"SubscriptionId","type":"string"}},"title":"SubscriptionAsync","type":"object"},"SubscriptionDetail":{"description":"The detail of the requested event subscription.","example":{"area":{"areaType":"CIRCLE"},"device":{"ipv4Address":{"publicAddress":"84.125.93.10","publicPort":59765},"ipv6Address":"2001:db8:85a3:8d3:1319:8a2e:370:7344","networkAccessIdentifier":"123456789@domain.com","phoneNumber":"+123456789"}},"properties":{"area":{"$ref":"#/components/schemas/Area"},"device":{"$ref":"#/components/schemas/Device"}},"required":["area"],"title":"SubscriptionDetail","type":"object"},"SubscriptionEnds":{"description":"Event detail structure for org.camaraproject.geofencing-subscriptions.v0.subscription-ends event.\nNote that the device object is defined as optional and will only to be returned if provided in createSubscription.\nIf more than one type of device identifier was provided, only one identifier will be returned\n(at implementation choice and with the original value provided in createSubscription).\n","properties":{"area":{"$ref":"#/components/schemas/Area"},"device":{"$ref":"#/components/schemas/Device"},"subscriptionId":{"description":"The unique identifier of the subscription in the scope of the subscription manager. When this information is contained within an event notification, this concept SHALL be referred as `subscriptionId` as per [Commonalities Event Notification Model](https://github.com/camaraproject/Commonalities/blob/main/documentation/API-design-guidelines.md#122-event-notification).","example":"qs15-h556-rt89-1298","title":"SubscriptionId","type":"string"},"terminationDescription":{"description":"Explanation why a subscription ended or had to end.","title":"terminationDescription","type":"string"},"terminationReason":{"$ref":"#/components/schemas/TerminationReason"}},"required":["area","subscriptionId","terminationReason"],"title":"SubscriptionEnds","type":"object"},"SubscriptionEventType":{"description":"area-entered - Event triggered when the device enters the given area\n\narea-left - Event triggered when the device leaves the given area\n","enum":["org.camaraproject.geofencing-subscriptions.v0.area-entered","org.camaraproject.geofencing-subscriptions.v0.area-left"],"title":"SubscriptionEventType","type":"string"},"SubscriptionId":{"description":"The unique identifier of the subscription in the scope of the subscription manager. When this information is contained within an event notification, this concept SHALL be referred as `subscriptionId` as per [Commonalities Event Notification Model](https://github.com/camaraproject/Commonalities/blob/main/documentation/API-design-guidelines.md#122-event-notification).","example":"qs15-h556-rt89-1298","title":"SubscriptionId","type":"string"},"SubscriptionRequest":{"description":"The request for creating an event-type event subscription.","discriminator":{"mapping":{"AMQP":"#/components/schemas/AMQPSubscriptionRequest","HTTP":"#/components/schemas/HTTPSubscriptionRequest","KAFKA":"#/components/schemas/ApacheKafkaSubscriptionRequest","MQTT3":"#/components/schemas/MQTTSubscriptionRequest","MQTT5":"#/components/schemas/MQTTSubscriptionRequest","NATS":"#/components/schemas/NATSSubscriptionRequest"},"propertyName":"protocol"},"example":{"config":{"initialEvent":true,"subscriptionDetail":{"area":{"areaType":"CIRCLE"},"device":{"ipv4Address":{"publicAddress":"84.125.93.10","publicPort":59765},"ipv6Address":"2001:db8:85a3:8d3:1319:8a2e:370:7344","networkAccessIdentifier":"123456789@domain.com","phoneNumber":"+123456789"}},"subscriptionExpireTime":"2023-01-17T13:18:23.682000+00:00","subscriptionMaxEvents":5},"protocol":"HTTP","sink":"https://endpoint.example.com/sink","sinkCredential":{"credentialType":"PLAIN"},"types":["org.camaraproject.geofencing-subscriptions.v0.area-entered"]},"properties":{"config":{"$ref":"#/components/schemas/Config"},"protocol":{"$ref":"#/components/schemas/Protocol"},"sink":{"description":"The address to which events shall be delivered using the selected protocol.","example":"https://endpoint.example.com/sink","format":"uri","title":"sink","type":"string"},"sinkCredential":{"$ref":"#/components/schemas/SinkCredential"},"types":{"description":"Camara Event types which are eligible to be delivered by this subscription.\nNote: As of now we enforce to have only event type per subscription.\n","items":{"$ref":"#/components/schemas/SubscriptionEventType"},"maxItems":1,"minItems":1,"title":"types","type":"array"}},"required":["config","protocol","sink","types"],"title":"SubscriptionRequest","type":"object"},"TerminationReason":{"description":"- NETWORK_TERMINATED - API server stopped sending notification\n- SUBSCRIPTION_UNPROCESSABLE - Subscription cannot be processed due to some reason, e.g. because the specified area cannot be managed. Useful for asynchronous subscription creation.\n- SUBSCRIPTION_EXPIRED - Subscription expire time (optionally set by the requester) has been reached\n- SUBSCRIPTION_DELETED - Subscription was deleted by the requester\n- MAX_EVENTS_REACHED - Maximum number of events (optionally set by the requester) has been reached\n- ACCESS_TOKEN_EXPIRED - Access Token sinkCredential (optionally set by the requester) expiration time has been reached\n","enum":["MAX_EVENTS_REACHED","NETWORK_TERMINATED","SUBSCRIPTION_UNPROCESSABLE","SUBSCRIPTION_EXPIRED","SUBSCRIPTION_DELETED","ACCESS_TOKEN_EXPIRED"],"title":"TerminationReason","type":"string"},"createSubscription_400_response":{"allOf":[{"$ref":"#/components/schemas/ErrorInfo"},{"properties":{"code":{"enum":["INVALID_ARGUMENT","INVALID_CREDENTIAL","INVALID_PROTOCOL","INVALID_TOKEN"],"type":"string"},"status":{"enum":[400],"type":"number"}},"type":"object"}],"example":{"code":"INVALID_ARGUMENT","message":"message","status":6.027456183070403},"title":"createSubscription_400_response"},"createSubscription_422_response":{"allOf":[{"$ref":"#/components/schemas/ErrorInfo"},{"properties":{"code":{"enum":["IDENTIFIER_MISMATCH","MISSING_IDENTIFIER","MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED","SERVICE_NOT_APPLICABLE","UNNECESSARY_IDENTIFIER","UNSUPPORTED_IDENTIFIER","GEOFENCING_SUBSCRIPTIONS.AREA_NOT_COVERED","GEOFENCING_SUBSCRIPTIONS.INVALID_AREA"],"type":"string"},"status":{"enum":[422],"type":"number"}},"type":"object"}],"example":{"code":"IDENTIFIER_MISMATCH","message":"message","status":5.962133916683182},"title":"createSubscription_422_response"},"createSubscription_429_response":{"allOf":[{"$ref":"#/components/schemas/ErrorInfo"},{"properties":{"code":{"enum":["QUOTA_EXCEEDED","TOO_MANY_REQUESTS"],"type":"string"},"status":{"enum":[429],"type":"number"}},"type":"object"}],"example":{"code":"QUOTA_EXCEEDED","message":"message","status":2.3021358869347655},"title":"createSubscription_429_response"},"inline_object":{"allOf":[{"$ref":"#/components/schemas/ErrorInfo"},{"properties":{"code":{"enum":["PERMISSION_DENIED","SUBSCRIPTION_MISMATCH"],"type":"string"},"status":{"enum":[403],"type":"number"}},"type":"object"}]},"postNotification_410_response":{"allOf":[{"$ref":"#/components/schemas/ErrorInfo"},{"properties":{"code":{"enum":["GONE"],"type":"string"},"status":{"enum":[410],"type":"number"}},"type":"object"}],"example":{"code":"GONE","message":"message","status":6.027456183070403},"title":"postNotification_410_response"},"retrieveGeofencingSubscriptionList_400_response":{"allOf":[{"$ref":"#/components/schemas/ErrorInfo"},{"properties":{"code":{"enum":["INVALID_ARGUMENT"],"type":"string"},"status":{"enum":[400],"type":"number"}},"type":"object"}],"example":{"code":"INVALID_ARGUMENT","message":"message","status":6.027456183070403},"title":"retrieveGeofencingSubscriptionList_400_response"},"retrieveGeofencingSubscriptionList_401_response":{"allOf":[{"$ref":"#/components/schemas/ErrorInfo"},{"properties":{"code":{"enum":["AUTHENTICATION_REQUIRED","UNAUTHENTICATED"],"type":"string"},"status":{"enum":[401],"type":"number"}},"type":"object"}],"example":{"code":"AUTHENTICATION_REQUIRED","message":"message","status":5.962133916683182},"title":"retrieveGeofencingSubscriptionList_401_response"},"retrieveGeofencingSubscriptionList_403_response":{"allOf":[{"$ref":"#/components/schemas/ErrorInfo"},{"properties":{"code":{"enum":["PERMISSION_DENIED"],"type":"string"},"status":{"enum":[403],"type":"number"}},"type":"object"}],"example":{"code":"PERMISSION_DENIED","message":"message","status":2.3021358869347655},"title":"retrieveGeofencingSubscriptionList_403_response"},"retrieveGeofencingSubscription_404_response":{"allOf":[{"$ref":"#/components/schemas/ErrorInfo"},{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"status":{"enum":[404],"type":"number"}},"type":"object"}],"example":{"code":"NOT_FOUND","message":"message","status":6.027456183070403},"title":"retrieveGeofencingSubscription_404_response"}},"securitySchemes":{"openId":{"description":"OpenID Connect authentication.","openIdConnectUrl":"https://example.com/.well-known/openid-configuration","type":"openIdConnect","x-scopeValidateFunc":"openapi_server.controllers.security_controller.validate_scope_openId","x-tokenInfoFunc":"openapi_server.controllers.security_controller.info_from_openId"}}},"externalDocs":{"description":"Project documentation at Camara","url":"https://github.com/camaraproject/DeviceLocation"},"info":{"description":"API to create, retrieve and delete event subscriptions to realize geofencing for a user device.\n\n# Introduction\n\nWith this API, API consumers can create subscriptions for their devices to receive notifications when a device enters or exits a specified area.\n\n* If the provided area is out of the operator's coverage or it is not supported for any reason, an error `422 GEOFENCING_SUBSCRIPTIONS.AREA_NOT_COVERED` will be returned.\n* Legal restrictions regarding privacy, or other regulatory or implementation issues, may force the operator to set restrictions to the provided area, such as setting a minimum value to the accepted radius. In these cases, an error `422 GEOFENCING_SUBSCRIPTIONS.INVALID_AREA` will be returned and the error message will refer to the reason of the limitation.\n\nThe area provided in the request is described by a circle determined by coordinates (latitude and longitude) and an accuracy defined by the radius.\n\nUpon successfully creating a subscription, the API will provide an Event Subscription ID, and it will indicate the subscription's expiration date.\n\nIf the geofencing-state of a device changes, the event subscriber will be notified back to the provided Notification-Url given by the subscription-request.\n\nDevice geofencing API could be useful in scenarios such as:\n\n- Tracking devices for Presetting of Home-Settings\n- Tracking of logistics\n\n# Relevant terms and definitions\n\n* **Device**: A device refers to any physical entity that can connect to a network and participate in network communication.\n\n* **Area**: It specifies the geographical surface which a device is planned to enter or exit.\n\n# API Functionality\n\nThe API exposes following capabilities:\n\n## Device Geofencing subscription\nThese endpoints allow to manage event subscription on geofencing device location event.\n\nThe CAMARA subscription model is detailed in the CAMARA API design guideline document and follows CloudEvents specification.\n\nIt is mandatory in the subscription to provide the event `type` for which the client would like to subscribe.\n\nFollowing event ``types`` are managed for this API:\n  - ``org.camaraproject.geofencing-subscriptions.v0.area-entered``  - Event triggered when the device enters the given area\n\n  - ``org.camaraproject.geofencing-subscriptions.v0.area-left``     - Event triggered when the device leaves the given area\n\nNote: Additionally to these list, ``org.camaraproject.geofencing-subscriptions.v0.subscription-ends`` notification `type` is sent when the subscription ends.\nThis notification does not require dedicated subscription.\n\nIt is used when:\n  - the subscription expire time (optionally set by the requester) has been reached\n  - the maximum number of subscription events (optionally set by the requester) has been reached\n  - the subscription was deleted by the requester\n  - the Access Token `sinkCredential` (optionally set by the requester) expiration time has been reached\n  - the API server has to stop sending notification prematurely\n  - the specified geofence-`area` cannot be covered or is too small to be managed\n\n### Notification callback\n\nThis endpoint describes the event notification received on subscription listener side when the event occurred.\nAs for subscription, detailed description of the event notification is provided in the CAMARA API design guideline document.\n\n_**WARNING**: This callback endpoint must be exposed on the consumer side as `POST /{$request.body#/sink}`.\n  Developers may provide a callback URL on which notifications regarding geofencing can be received from the service provider.\n  If an event occurs the application will send events to the provided webhook - 'sink'._\n\n# Authorization and authentication\n\nThe \"Camara Security and Interoperability Profile\" provides details of how an API consumer requests an access token. Please refer to Identity and Consent Management (https://github.com/camaraproject/IdentityAndConsentManagement/) for the released version of the profile.\n\nThe specific authorization flows to be used will be agreed upon during the onboarding process, happening between the API consumer and the API provider, taking into account the declared purpose for accessing the API, whilst also being subject to the prevailing legal framework dictated by local legislation.\n\nIn cases where personal data is processed by the API and users can exercise their rights through mechanisms such as opt-in and/or opt-out, the use of three-legged access tokens is mandatory. This ensures that the API remains in compliance with privacy regulations, upholding the principles of transparency and user-centric privacy-by-design.\n\n# Identifying the device from the access token\n\nThis API requires the API consumer to identify a device as the subject of the API as follows:\n- When the API is invoked using a two-legged access token, the subject will be identified from the optional `device` object, which therefore MUST be provided.\n- When a three-legged access token is used however, this optional identifier MUST NOT be provided, as the subject will be uniquely identified from the access token.\n\nThis approach simplifies API usage for API consumers using a three-legged access token to invoke the API by relying on the information that is associated with the access token and was identified during the authentication process.\n\n## Error handling:\n\n- If the subject cannot be identified from the access token and the optional `device` object is not included in the request, then the server will return an error with the `422 MISSING_IDENTIFIER` error code.\n\n- If the subject can be identified from the access token and the optional `device` object is also included in the request, then the server will return an error with the `422 UNNECESSARY_IDENTIFIER` error code. This will be the case even if the same device is identified by these two methods, as the server is unable to make this comparison.\n\n# Multi-SIM scenario handling\n\nIn multi-SIM scenarios, where more than one mobile device is associated with the phone number given as input in the API call (e.g. a smartphone with an associated smartwatch), it might not be possible to uniquely identify the device whose location is to be verified. Check with the API provider what is the expected behaviour when a phone number belonging to a multi-SIM group is used as the device identifier, as the API may behave:\n\n- rejecting the subscription with an error indicating that that phone number is not supported for this API, or\n- generating events for a single device in the multi-SIM group, if one of the devices is considered linked to the main SIM and this concept is supported by the operator, or\n- generating events for of all the SIMs associated to the requested phone number.\n\nPossible solutions to make the scenario more deterministic include:\n\n- Using preferably the authorisation code flow to obtain an access token, which will automatically identify the intended device.\n- Identifying the intended device from a unique identifier for that device, such as its source IP address and port.\n- Check with the API provider whether a unique \"secondary\" phone number is already associated with each device and use the secondary phone number to identify the intended device if available.\n\n# Further info and support\n\n(FAQs will be added in a later version of the documentation)\n","license":{"name":"Apache 2.0","url":"https://www.apache.org/licenses/LICENSE-2.0.html"},"title":"Device Geofencing Subscriptions","version":"wip","x-camara-commonalities":0.5},"openapi":"3.0.3","paths":{"/subscriptions":{"get":{"description":"Retrieve a list of geofencing event subscription(s).","operationId":"retrieve_geofencing_subscription_list","parameters":[{"description":"Correlation id for the different services.","explode":false,"in":"header","name":"x-correlator","required":false,"schema":{"pattern":"^[a-zA-Z0-9-]{0,55}$","type":"string"},"style":"simple"}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Subscription"},"minItems":0,"type":"array"}}},"description":"List of event subscription details.","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"400":{"content":{"application/json":{"examples":{"GENERIC_400_INVALID_ARGUMENT":{"description":"Invalid Argument. Generic Syntax Exception","value":{"code":"INVALID_ARGUMENT","message":"Client specified an invalid argument, request body or query param.","status":400}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscriptionList_400_response"}}},"description":"Bad Request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"401":{"content":{"application/json":{"examples":{"GENERIC_401_AUTHENTICATION_REQUIRED":{"description":"New authentication is needed, authentication is no longer valid","value":{"code":"AUTHENTICATION_REQUIRED","message":"New authentication is required.","status":401}},"GENERIC_401_UNAUTHENTICATED":{"description":"Request cannot be authenticated","value":{"code":"UNAUTHENTICATED","message":"Request not authenticated due to missing, invalid, or expired credentials.","status":401}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscriptionList_401_response"}}},"description":"Authentication problem with the client request.","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"403":{"content":{"application/json":{"examples":{"GENERIC_403_PERMISSION_DENIED":{"description":"Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security","value":{"code":"PERMISSION_DENIED","message":"Client does not have sufficient permissions to perform this action.","status":403}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscriptionList_403_response"}}},"description":"Client does not have sufficient permission","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}}},"security":[{"openId":["geofencing-subscriptions:read"]}],"summary":"Retrieve a list of geofencing event subscription","tags":["Geofencing subscriptions"],"x-openapi-router-controller":"openapi_server.controllers.geofencing_subscriptions_controller"},"post":{"callbacks":{"notifications":{"{$request.body#/sink}":{"post":{"description":"Important: This endpoint is to be implemented by the API consumer.\nThe Geofencing server will call this endpoint whenever a Geofencing event occurs.\nThe `operationId` value will have to be replaced accordingly with WG API specific semantics.\n","operationId":"postNotification","parameters":[{"description":"Correlation id for the different services.","explode":false,"in":"header","name":"x-correlator","required":false,"schema":{"pattern":"^[a-zA-Z0-9-]{0,55}$","type":"string"},"style":"simple"}],"requestBody":{"content":{"application/cloudevents+json":{"examples":{"CIRCLE_AREA_ENTERED":{"$ref":"#/components/examples/CIRCLE_AREA_ENTERED"},"CIRCLE_AREA_LEFT":{"$ref":"#/components/examples/CIRCLE_AREA_LEFT"},"SUBSCRIPTION_ENDS":{"$ref":"#/components/examples/SUBSCRIPTION_ENDS"},"SUBSCRIPTION_UNPROCESSABLE":{"$ref":"#/components/examples/SUBSCRIPTION_UNPROCESSABLE"}},"schema":{"$ref":"#/components/schemas/CloudEvent"}}},"required":true},"responses":{"204":{"description":"Successful notification.","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"400":{"content":{"application/json":{"examples":{"GENERIC_400_INVALID_ARGUMENT":{"description":"Invalid Argument. Generic Syntax Exception","value":{"code":"INVALID_ARGUMENT","message":"Client specified an invalid argument, request body or query param.","status":400}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscriptionList_400_response"}}},"description":"Bad Request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"401":{"content":{"application/json":{"examples":{"GENERIC_401_AUTHENTICATION_REQUIRED":{"description":"New authentication is needed, authentication is no longer valid","value":{"code":"AUTHENTICATION_REQUIRED","message":"New authentication is required.","status":401}},"GENERIC_401_UNAUTHENTICATED":{"description":"Request cannot be authenticated","value":{"code":"UNAUTHENTICATED","message":"Request not authenticated due to missing, invalid, or expired credentials.","status":401}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscriptionList_401_response"}}},"description":"Authentication problem with the client request.","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"403":{"content":{"application/json":{"examples":{"GENERIC_403_PERMISSION_DENIED":{"description":"Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security","value":{"code":"PERMISSION_DENIED","message":"Client does not have sufficient permissions to perform this action.","status":403}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscriptionList_403_response"}}},"description":"Client does not have sufficient permission","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"410":{"content":{"application/json":{"examples":{"GENERIC_410_GONE":{"description":"Use in notifications flow to allow API Consumer to indicate that its callback is no longer available","value":{"code":"GONE","message":"Access to the target resource is no longer available.","status":410}}},"schema":{"$ref":"#/components/schemas/postNotification_410_response"}}},"description":"Gone","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"429":{"content":{"application/json":{"examples":{"GENERIC_429_QUOTA_EXCEEDED":{"description":"Request is rejected due to exceeding a business quota limit","value":{"code":"QUOTA_EXCEEDED","message":"Out of resource quota.","status":429}},"GENERIC_429_TOO_MANY_REQUESTS":{"description":"Access to the API has been temporarily blocked due to rate or spike arrest limits being reached","value":{"code":"TOO_MANY_REQUESTS","message":"Rate limit reached.","status":429}}},"schema":{"$ref":"#/components/schemas/createSubscription_429_response"}}},"description":"Too Many Requests","headers":{"X-Correlator":{"$ref":"#/components/headers/x-correlator"}}}},"security":[{},{"notificationsBearerAuth":[]}],"summary":"notifications callback","x-callback-request":true}}}},"description":"Create a subscription for a device to receive notifications when the device enters or exits a specified area.","operationId":"create_subscription","parameters":[{"description":"Correlation id for the different services.","explode":false,"in":"header","name":"x-correlator","required":false,"schema":{"pattern":"^[a-zA-Z0-9-]{0,55}$","type":"string"},"style":"simple"}],"requestBody":{"content":{"application/json":{"examples":{"CIRCLE_AREA_ENTERED":{"$ref":"#/components/examples/REQUEST_CIRCLE_AREA_ENTERED"}},"schema":{"$ref":"#/components/schemas/SubscriptionRequest"}}},"required":true},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}},"description":"Created (Successful creation of subscription).","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"202":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscriptionAsync"}}},"description":"Request accepted to be processed. It applies for async creation process.","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"400":{"content":{"application/json":{"examples":{"GENERIC_400_INVALID_ARGUMENT":{"value":{"code":"INVALID_ARGUMENT","message":"Client specified an invalid argument, request body or query param.","status":400}},"GENERIC_400_INVALID_CREDENTIAL":{"value":{"code":"INVALID_CREDENTIAL","message":"Only Access token is supported.","status":400}},"GENERIC_400_INVALID_PROTOCOL":{"value":{"code":"INVALID_PROTOCOL","message":"Only HTTP is supported.","status":400}},"GENERIC_400_INVALID_TOKEN":{"value":{"code":"INVALID_TOKEN","message":"Only bearer token is supported.","status":400}}},"schema":{"$ref":"#/components/schemas/createSubscription_400_response"}}},"description":"Problem with the client request.","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"401":{"content":{"application/json":{"examples":{"GENERIC_401_AUTHENTICATION_REQUIRED":{"description":"New authentication is needed, authentication is no longer valid","value":{"code":"AUTHENTICATION_REQUIRED","message":"New authentication is required.","status":401}},"GENERIC_401_UNAUTHENTICATED":{"description":"Request cannot be authenticated","value":{"code":"UNAUTHENTICATED","message":"Request not authenticated due to missing, invalid, or expired credentials.","status":401}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscriptionList_401_response"}}},"description":"Authentication problem with the client request.","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"403":{"content":{"application/json":{"examples":{"GENERIC_403_PERMISSION_DENIED":{"description":"Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security","value":{"code":"PERMISSION_DENIED","message":"Client does not have sufficient permissions to perform this action.","status":403}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscriptionList_403_response"}}},"description":"Client does not have sufficient permission","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"422":{"content":{"application/json":{"examples":{"GENERIC_422_IDENTIFIER_MISMATCH":{"description":"Inconsistency between device identifiers not pointing to the same device.","value":{"code":"IDENTIFIER_MISMATCH","message":"Provided identifiers are not consistent.","status":422}},"GENERIC_422_MISSING_IDENTIFIER":{"description":"An identifier is not included in the request and the device or phone number identification cannot be derived from the 3-legged access token","value":{"code":"MISSING_IDENTIFIER","message":"The device cannot be identified.","status":422}},"GENERIC_422_MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED":{"value":{"code":"MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED","message":"Multi event types subscription not managed.","status":422}},"GENERIC_422_SERVICE_NOT_APPLICABLE":{"description":"Service not applicable for the provided identifier","value":{"code":"SERVICE_NOT_APPLICABLE","message":"The service is not available for the provided identifier.","status":422}},"GENERIC_422_UNNECESSARY_IDENTIFIER":{"description":"An explicit identifier is provided when a device or phone number has already been identified from the access token","value":{"code":"UNNECESSARY_IDENTIFIER","message":"The device is already identified by the access token.","status":422}},"GENERIC_422_UNSUPPORTED_IDENTIFIER":{"description":"None of the provided identifiers is supported by the implementation","value":{"code":"UNSUPPORTED_IDENTIFIER","message":"The identifier provided is not supported.","status":422}},"GEOFENCING_422_AREA_NOT_COVERED":{"description":"The system is not able cover the requested area","summary":"The area cannot be covered","value":{"code":"GEOFENCING_SUBSCRIPTIONS.AREA_NOT_COVERED","message":"Unable to cover the requested area","status":422}},"GEOFENCING_422_INVALID_AREA":{"description":"The requested area is too small to be supported by the system.","summary":"Invalid area","value":{"code":"GEOFENCING_SUBSCRIPTIONS.INVALID_AREA","message":"The requested area is too small","status":422}}},"schema":{"$ref":"#/components/schemas/createSubscription_422_response"}}},"description":"Unprocessable Entity","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"429":{"content":{"application/json":{"examples":{"GENERIC_429_QUOTA_EXCEEDED":{"description":"Request is rejected due to exceeding a business quota limit","value":{"code":"QUOTA_EXCEEDED","message":"Out of resource quota.","status":429}},"GENERIC_429_TOO_MANY_REQUESTS":{"description":"Access to the API has been temporarily blocked due to rate or spike arrest limits being reached","value":{"code":"TOO_MANY_REQUESTS","message":"Rate limit reached.","status":429}}},"schema":{"$ref":"#/components/schemas/createSubscription_429_response"}}},"description":"Too Many Requests","headers":{"X-Correlator":{"$ref":"#/components/headers/x-correlator"}}}},"security":[{"openId":["geofencing-subscriptions:org.camaraproject.geofencing-subscriptions.v0.area-entered:create","geofencing-subscriptions:org.camaraproject.geofencing-subscriptions.v0.area-left:create"]}],"summary":"Create a geofencing subscription for a device","tags":["Geofencing subscriptions"],"x-openapi-router-controller":"openapi_server.controllers.geofencing_subscriptions_controller"}},"/subscriptions/{subscriptionId}":{"delete":{"description":"Delete a given Geofencing subscription.","operationId":"delete_geofencing_subscription","parameters":[{"description":"Subscription identifier that was obtained from the create event subscription operation.","explode":false,"in":"path","name":"subscriptionId","required":true,"schema":{"$ref":"#/components/schemas/SubscriptionId"},"style":"simple"},{"description":"Correlation id for the different services.","explode":false,"in":"header","name":"x-correlator","required":false,"schema":{"pattern":"^[a-zA-Z0-9-]{0,55}$","type":"string"},"style":"simple"}],"responses":{"202":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscriptionAsync"}}},"description":"Request accepted to be processed. It applies for async deletion process.","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"204":{"description":"Geofencing subscription deleted.","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"400":{"content":{"application/json":{"examples":{"GENERIC_400_INVALID_ARGUMENT":{"summary":"Schema validation failed","value":{"code":"INVALID_ARGUMENT","message":"Client specified an invalid argument, request body or query param.","status":400}},"GENERIC_400_SUBSCRIPTION_ID_REQUIRED":{"summary":"The subscription id is required","value":{"code":"INVALID_ARGUMENT","message":"Expected property is missing: subscriptionId","status":400}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscriptionList_400_response"}}},"description":"Problem with the client request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"401":{"content":{"application/json":{"examples":{"GENERIC_401_AUTHENTICATION_REQUIRED":{"description":"New authentication is needed, authentication is no longer valid","value":{"code":"AUTHENTICATION_REQUIRED","message":"New authentication is required.","status":401}},"GENERIC_401_UNAUTHENTICATED":{"description":"Request cannot be authenticated","value":{"code":"UNAUTHENTICATED","message":"Request not authenticated due to missing, invalid, or expired credentials.","status":401}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscriptionList_401_response"}}},"description":"Authentication problem with the client request.","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"403":{"content":{"application/json":{"examples":{"GENERIC_403_PERMISSION_DENIED":{"description":"Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security","value":{"code":"PERMISSION_DENIED","message":"Client does not have sufficient permissions to perform this action.","status":403}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscriptionList_403_response"}}},"description":"Client does not have sufficient permission","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"404":{"content":{"application/json":{"examples":{"GENERIC_404_NOT_FOUND":{"description":"Resource is not found","value":{"code":"NOT_FOUND","message":"The specified resource is not found.","status":404}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscription_404_response"}}},"description":"Not found","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}}},"security":[{"openId":["geofencing-subscriptions:delete"]}],"summary":"Delete a Geofencing event subscription","tags":["Geofencing subscriptions"],"x-openapi-router-controller":"openapi_server.controllers.geofencing_subscriptions_controller"},"get":{"description":"Retrieve Geofencing subscription information for a given subscription ID.","operationId":"retrieve_geofencing_subscription","parameters":[{"description":"Subscription identifier that was obtained from the create event subscription operation.","explode":false,"in":"path","name":"subscriptionId","required":true,"schema":{"$ref":"#/components/schemas/SubscriptionId"},"style":"simple"},{"description":"Correlation id for the different services.","explode":false,"in":"header","name":"x-correlator","required":false,"schema":{"pattern":"^[a-zA-Z0-9-]{0,55}$","type":"string"},"style":"simple"}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}},"description":"OK","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"400":{"content":{"application/json":{"examples":{"GENERIC_400_INVALID_ARGUMENT":{"summary":"Schema validation failed","value":{"code":"INVALID_ARGUMENT","message":"Client specified an invalid argument, request body or query param.","status":400}},"GENERIC_400_SUBSCRIPTION_ID_REQUIRED":{"summary":"The subscription id is required","value":{"code":"INVALID_ARGUMENT","message":"Expected property is missing: subscriptionId","status":400}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscriptionList_400_response"}}},"description":"Problem with the client request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"401":{"content":{"application/json":{"examples":{"GENERIC_401_AUTHENTICATION_REQUIRED":{"description":"New authentication is needed, authentication is no longer valid","value":{"code":"AUTHENTICATION_REQUIRED","message":"New authentication is required.","status":401}},"GENERIC_401_UNAUTHENTICATED":{"description":"Request cannot be authenticated","value":{"code":"UNAUTHENTICATED","message":"Request not authenticated due to missing, invalid, or expired credentials.","status":401}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscriptionList_401_response"}}},"description":"Authentication problem with the client request.","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"403":{"content":{"application/json":{"examples":{"GENERIC_403_PERMISSION_DENIED":{"description":"Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security","value":{"code":"PERMISSION_DENIED","message":"Client does not have sufficient permissions to perform this action.","status":403}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscriptionList_403_response"}}},"description":"Client does not have sufficient permission","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"404":{"content":{"application/json":{"examples":{"GENERIC_404_NOT_FOUND":{"description":"Resource is not found","value":{"code":"NOT_FOUND","message":"The specified resource is not found.","status":404}}},"schema":{"$ref":"#/components/schemas/retrieveGeofencingSubscription_404_response"}}},"description":"Not found","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}}},"security":[{"openId":["geofencing-subscriptions:read"]}],"summary":"Operation to retrieve a subscription based on the provided ID","tags":["Geofencing subscriptions"],"x-openapi-router-controller":"openapi_server.controllers.geofencing_subscriptions_controller"}}},"servers":[{"url":"/geofencing-subscriptions/vwip"}],"tags":[{"description":"Operations to manage event subscriptions on geofencing events for leaving and entering an area.","name":"Geofencing subscriptions"}]}
