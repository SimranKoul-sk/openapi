{"components":{"examples":{"CREATE_SUBSCRIPTION":{"value":{"config":{"initialEvent":true,"subscriptionDetail":{"device":{"phoneNumber":"+123456789"}},"subscriptionExpireTime":"2023-01-17T13:18:23.682000+00:00","subscriptionMaxEvents":5},"protocol":"HTTP","sink":"https://endpoint.example.com/sink","sinkCredential":{"accessToken":"JhbGciOiJSUzI1NiIsImtpZCI6Imk2bEdrM0ZaenhSY1ViMkMzbkVRN3N5SEpsW","accessTokenExpiresUtc":"2024-02-17T16:23:45+00:00","accessTokenType":"bearer","credentialType":"ACCESSTOKEN"},"types":["org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data"]}},"REACHABILITY_DATA":{"value":{"data":{"device":{"phoneNumber":"+123456789"},"subscriptionId":"qs15-h556-rt89-1298"},"datacontenttype":"application/json","id":"123656","source":"https://notificationSendServer12.supertelco.com","specversion":"1.0","time":"2023-01-19T13:18:23.682000+00:00","type":"org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data"}},"REACHABILITY_DISCONNECTED":{"value":{"data":{"device":{"phoneNumber":"+123456789"},"subscriptionId":"qs15-h556-rt89-1298"},"datacontenttype":"application/json","id":"123656","source":"https://notificationSendServer12.supertelco.com","specversion":"1.0","time":"2023-01-19T13:18:23.682000+00:00","type":"org.camaraproject.device-reachability-status-subscriptions.v0.reachability-disconnected"}},"REACHABILITY_SMS":{"value":{"data":{"device":{"phoneNumber":"+123456789"},"subscriptionId":"qs15-h556-rt89-1298"},"datacontenttype":"application/json","id":"123656","source":"https://notificationSendServer12.supertelco.com","specversion":"1.0","time":"2023-01-19T13:18:23.682000+00:00","type":"org.camaraproject.device-reachability-status-subscriptions.v0.reachability-sms"}},"SUBSCRIPTION_ACTIVATION_REQUESTED":{"value":{"config":{"initialEvent":true,"subscriptionDetail":{"device":{"phoneNumber":"+123456789"}},"subscriptionExpireTime":"2024-07-17T13:18:23.682000+00:00","subscriptionMaxEvents":5},"expiresAt":"2024-07-03T21:12:02.871000+00:00","id":"550e8400-e29b-41d4-a716-446655440000","protocol":"HTTP","sink":"https://endpoint.example.com/sink","startsAt":"2024-07-03T21:12:02.871000+00:00","status":"ACTIVATION_REQUESTED","types":["org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data"]}},"SUBSCRIPTION_ACTIVE":{"value":{"config":{"initialEvent":true,"subscriptionDetail":{"device":{"phoneNumber":"+123456789"}},"subscriptionExpireTime":"2024-07-17T13:18:23.682000+00:00","subscriptionMaxEvents":5},"expiresAt":"2024-07-03T21:12:02.871000+00:00","id":"550e8400-e29b-41d4-a716-446655440000","protocol":"HTTP","sink":"https://endpoint.example.com/sink","startsAt":"2024-07-03T21:12:02.871000+00:00","status":"ACTIVE","types":["org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data"]}},"SUBSCRIPTION_DELETED":{"value":{"config":{"initialEvent":true,"subscriptionDetail":{"device":{"phoneNumber":"+123456789"}},"subscriptionExpireTime":"2024-07-17T13:18:23.682000+00:00","subscriptionMaxEvents":5},"expiresAt":"2024-07-03T21:12:02.871000+00:00","id":"550e8400-e29b-41d4-a716-446655440000","protocol":"HTTP","sink":"https://endpoint.example.com/sink","startsAt":"2024-07-03T21:12:02.871000+00:00","status":"DELETED","types":["org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data"]}},"SUBSCRIPTION_ENDS":{"value":{"data":{"device":{"phoneNumber":"+123456789"},"subscriptionId":"qs15-h556-rt89-1298","terminationDescription":"Subscription expiry time has been reached","terminationReason":"SUBSCRIPTION_EXPIRED"},"datacontenttype":"application/json","id":"123658","source":"https://notificationSendServer12.supertelco.com","specversion":"1.0","time":"2024-03-22T05:40:23.682000+00:00","type":"org.camaraproject.device-reachability-status-subscriptions.v0.subscription-ends"}}},"headers":{"x-correlator":{"description":"Correlation id for the different services","explode":false,"schema":{"example":"b4333c46-49c0-4f62-80d7-f0ef930f1c46","pattern":"^[a-zA-Z0-9-]{0,55}$","type":"string"},"style":"simple"}},"parameters":{"SubscriptionId":{"description":"Subscription identifier that was obtained from the create event subscription operation","explode":false,"in":"path","name":"subscriptionId","required":true,"schema":{"$ref":"#/components/schemas/SubscriptionId"},"style":"simple"},"x-correlator":{"description":"Correlation id for the different services","explode":false,"in":"header","name":"x-correlator","required":false,"schema":{"example":"b4333c46-49c0-4f62-80d7-f0ef930f1c46","pattern":"^[a-zA-Z0-9-]{0,55}$","type":"string"},"style":"simple"}},"responses":{"CreateSubscriptionBadRequest400":{"content":{"application/json":{"examples":{"GENERIC_400_INVALID_ARGUMENT":{"description":"Invalid Argument. Generic Syntax Exception","value":{"code":"INVALID_ARGUMENT","message":"Client specified an invalid argument, request body or query param.","status":400}},"GENERIC_400_INVALID_CREDENTIAL":{"description":"Invalid sink credential type","value":{"code":"INVALID_CREDENTIAL","message":"Only Access token is supported","status":400}},"GENERIC_400_INVALID_PROTOCOL":{"description":"Invalid protocol for events subscription management","value":{"code":"INVALID_PROTOCOL","message":"Only HTTP is supported","status":400}},"GENERIC_400_INVALID_TOKEN":{"description":"Invalid token type for sink credential of type ACCESSTOKEN","value":{"code":"INVALID_TOKEN","message":"Only bearer token is supported","status":400}},"GENERIC_400_OUT_OF_RANGE":{"description":"Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested","value":{"code":"OUT_OF_RANGE","message":"Client specified an invalid range.","status":400}}},"schema":{"$ref":"#/components/schemas/createDeviceReachabilityStatusSubscription_400_response"}}},"description":"Problem with the client request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"CreateSubscriptionUnprocessableEntity422":{"content":{"application/json":{"examples":{"GENERIC_422_IDENTIFIER_MISMATCH":{"description":"Inconsistency between identifiers not pointing to the same device","value":{"code":"IDENTIFIER_MISMATCH","message":"Provided identifiers are not consistent.","status":422}},"GENERIC_422_MISSING_IDENTIFIER":{"description":"An identifier is not included in the request and the device or phone number identification cannot be derived from the 3-legged access token","value":{"code":"MISSING_IDENTIFIER","message":"The device cannot be identified.","status":422}},"GENERIC_422_MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED":{"description":"Multi event types subscription is not supported","value":{"code":"MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED","message":"Multi event types subscription not managed","status":422}},"GENERIC_422_SERVICE_NOT_APPLICABLE":{"description":"Service not applicable for the provided identifier","value":{"code":"SERVICE_NOT_APPLICABLE","message":"The service is not available for the provided identifier.","status":422}},"GENERIC_422_UNNECESSARY_IDENTIFIER":{"description":"An explicit identifier is provided when a device or phone number has already been identified from the access token","value":{"code":"UNNECESSARY_IDENTIFIER","message":"The device is already identified by the access token.","status":422}},"GENERIC_422_UNSUPPORTED_IDENTIFIER":{"description":"None of the provided identifiers is supported by the implementation","value":{"code":"UNSUPPORTED_IDENTIFIER","message":"The identifier provided is not supported.","status":422}}},"schema":{"$ref":"#/components/schemas/createDeviceReachabilityStatusSubscription_422_response"}}},"description":"Unprocessable Entity","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"Generic400":{"content":{"application/json":{"examples":{"GENERIC_400_INVALID_ARGUMENT":{"description":"Invalid Argument. Generic Syntax Exception","value":{"code":"INVALID_ARGUMENT","message":"Client specified an invalid argument, request body or query param.","status":400}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscriptionList_400_response"}}},"description":"Problem with the client request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"Generic401":{"content":{"application/json":{"examples":{"GENERIC_401_AUTHENTICATION_REQUIRED":{"description":"New authentication is needed, authentication is no longer valid","value":{"code":"AUTHENTICATION_REQUIRED","message":"New authentication is required.","status":401}},"GENERIC_401_UNAUTHENTICATED":{"description":"Request cannot be authenticated","value":{"code":"UNAUTHENTICATED","message":"Request not authenticated due to missing, invalid, or expired credentials.","status":401}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscriptionList_401_response"}}},"description":"Authentication problem with the client request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"Generic403":{"content":{"application/json":{"examples":{"GENERIC_403_PERMISSION_DENIED":{"description":"Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security","value":{"code":"PERMISSION_DENIED","message":"Client does not have sufficient permissions to perform this action.","status":403}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscriptionList_403_response"}}},"description":"Client does not have sufficient permission","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"Generic404":{"content":{"application/json":{"examples":{"GENERIC_404_NOT_FOUND":{"description":"Resource is not found","value":{"code":"NOT_FOUND","message":"The specified resource is not found.","status":404}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscription_404_response"}}},"description":"Resource Not Found","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"Generic409":{"content":{"application/json":{"examples":{"GENERIC_409_ABORTED":{"description":"Concurreny of processes of the same nature/scope","value":{"code":"ABORTED","message":"Concurrency conflict.","status":409}},"GENERIC_409_ALREADY_EXISTS":{"description":"Trying to create an existing resource","value":{"code":"ALREADY_EXISTS","message":"The resource that a client tried to create already exists.","status":409}}},"schema":{"$ref":"#/components/schemas/createDeviceReachabilityStatusSubscription_409_response"}}},"description":"Conflict","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"Generic410":{"content":{"application/json":{"examples":{"GENERIC_410_GONE":{"description":"Use in notifications flow to allow API Consumer to indicate that its callback is no longer available","value":{"code":"GONE","message":"Access to the target resource is no longer available.","status":410}}},"schema":{"$ref":"#/components/schemas/postNotification_410_response"}}},"description":"Gone","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"Generic429":{"content":{"application/json":{"examples":{"GENERIC_429_QUOTA_EXCEEDED":{"description":"Request is rejected due to exceeding a business quota limit","value":{"code":"QUOTA_EXCEEDED","message":"Out of resource quota.","status":429}},"GENERIC_429_TOO_MANY_REQUESTS":{"description":"Access to the API has been temporarily blocked due to rate or spike arrest limits being reached","value":{"code":"TOO_MANY_REQUESTS","message":"Rate limit reached.","status":429}}},"schema":{"$ref":"#/components/schemas/createDeviceReachabilityStatusSubscription_429_response"}}},"description":"Too Many Requests","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"SubscriptionIdRequired400":{"content":{"application/json":{"examples":{"GENERIC_400_INVALID_ARGUMENT":{"description":"Invalid Argument. Generic Syntax Exception","value":{"code":"INVALID_ARGUMENT","message":"Client specified an invalid argument, request body or query param.","status":400}},"GENERIC_400_SUBSCRIPTION_ID_REQUIRED":{"description":"subscription id is required","value":{"code":"INVALID_ARGUMENT","message":"Expected property is missing: subscriptionId","status":400}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscriptionList_400_response"}}},"description":"Problem with the client request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"SubscriptionPermissionDenied403":{"content":{"application/json":{"examples":{"GENERIC_403_PERMISSION_DENIED":{"description":"Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security","value":{"code":"PERMISSION_DENIED","message":"Client does not have sufficient permissions to perform this action.","status":403}},"GENERIC_403_SUBSCRIPTION_MISMATCH":{"description":"Inconsistent access token for requested subscription","value":{"code":"SUBSCRIPTION_MISMATCH","message":"Inconsistent access token for requested events subscription","status":403}}},"schema":{"$ref":"#/components/schemas/createDeviceReachabilityStatusSubscription_403_response"}}},"description":"Client does not have sufficient permission","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}}},"schemas":{"AMQPSettings":{"properties":{"address":{"title":"address","type":"string"},"linkName":{"title":"linkName","type":"string"},"linkProperties":{"additionalProperties":{"type":"string"},"title":"linkProperties","type":"object"},"senderSettlementMode":{"enum":["settled","unsettled"],"title":"senderSettlementMode","type":"string"}},"title":"AMQPSettings","type":"object"},"AMQPSubscriptionRequest":{"allOf":[{"$ref":"#/components/schemas/SubscriptionRequest"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/AMQPSettings"}},"type":"object"}]},"AMQPSubscriptionResponse":{"allOf":[{"$ref":"#/components/schemas/Subscription"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/AMQPSettings"}},"type":"object"}]},"AccessTokenCredential":{"allOf":[{"$ref":"#/components/schemas/SinkCredential"},{"properties":{"accessToken":{"description":"REQUIRED. An access token is a previously acquired token granting access to the target resource.","type":"string"},"accessTokenExpiresUtc":{"description":"REQUIRED. An absolute (UTC) timestamp at which the token shall be considered expired.\nIn the case of an ACCESS_TOKEN_EXPIRED termination reason, implementation should notify the client before the expiration date.\nIf the access token is a JWT and registered \"exp\" (Expiration Time) claim is present, the two expiry times should match.\nIt must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.\nRecommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)\n","example":"2023-07-03T12:27:08.312000+00:00","format":"date-time","type":"string"},"accessTokenType":{"description":"REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)).","enum":["bearer"],"type":"string"}},"required":["accessToken","accessTokenExpiresUtc","accessTokenType"],"type":"object"}],"description":"An access token credential.","type":"object"},"ApacheKafkaSettings":{"properties":{"ackMode":{"title":"ackMode","type":"integer"},"clientId":{"title":"clientId","type":"string"},"partitionKeyExtractor":{"title":"partitionKeyExtractor","type":"string"},"topicName":{"title":"topicName","type":"string"}},"required":["topicName"],"title":"ApacheKafkaSettings","type":"object"},"ApacheKafkaSubscriptionRequest":{"allOf":[{"$ref":"#/components/schemas/SubscriptionRequest"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/ApacheKafkaSettings"}},"type":"object"}]},"ApacheKafkaSubscriptionResponse":{"allOf":[{"$ref":"#/components/schemas/Subscription"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/ApacheKafkaSettings"}},"type":"object"}]},"CloudEvent":{"description":"The notification callback","discriminator":{"mapping":{"org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data":"#/components/schemas/EventReachabilityData","org.camaraproject.device-reachability-status-subscriptions.v0.reachability-disconnected":"#/components/schemas/EventReachabilityDisconnected","org.camaraproject.device-reachability-status-subscriptions.v0.reachability-sms":"#/components/schemas/EventReachabilitySms","org.camaraproject.device-reachability-status-subscriptions.v0.subscription-ends":"#/components/schemas/EventSubscriptionEnds"},"propertyName":"type"},"properties":{"data":{"description":"Event details payload described in each CAMARA API and referenced by its type","title":"data","type":"object"},"datacontenttype":{"description":"media-type that describes the event payload encoding, must be \"application/json\" for CAMARA APIs","enum":["application/json"],"title":"datacontenttype","type":"string"},"id":{"description":"identifier of this event, that must be unique in the source context.","title":"id","type":"string"},"source":{"description":"Identifies the context in which an event happened - be a non-empty `URI-reference` like:\n- URI with a DNS authority:\n  * https://github.com/cloudevents\n  * mailto:cncf-wg-serverless@lists.cncf.io\n- Universally-unique URN with a UUID:\n  * urn:uuid:6e8bc430-9c3a-11d9-9669-0800200c9a66\n- Application-specific identifier:\n  * /cloudevents/spec/pull/123\n  * 1-555-123-4567\n","example":"https://notificationSendServer12.supertelco.com","format":"uri-reference","minLength":1,"title":"source","type":"string"},"specversion":{"description":"Version of the specification to which this event conforms (must be 1.0 if it conforms to cloudevents 1.0.2 version)","enum":["1.0"],"title":"specversion","type":"string"},"time":{"description":"Timestamp of when the occurrence happened.\nIf the time of the occurrence cannot be determined then this attribute MAY be set to some other time (such as the current time) by the CloudEvents producer,\nhowever all producers for the same source MUST be consistent in this respect. In other words,\neither they all use the actual time of the occurrence or they all use the same algorithm to determine the value used.\nIt must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.\nRecommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)\n","example":"2018-04-05T17:31:00+00:00","format":"date-time","title":"time","type":"string"},"type":{"$ref":"#/components/schemas/EventTypeNotification"}},"required":["id","source","specversion","time","type"],"title":"CloudEvent"},"Config":{"description":"Implementation-specific configuration parameters needed by the subscription manager for acquiring events.\nIn CAMARA we have predefined attributes like `subscriptionExpireTime`, `subscriptionMaxEvents`, `initialEvent`\nSpecific event type attributes must be defined in `subscriptionDetail`\nNote: if a request is performed for several event type, all subscribed event will use same `config` parameters.\n","example":{"initialEvent":true,"subscriptionDetail":{"device":{"ipv4Address":{"publicAddress":"84.125.93.10","publicPort":59765},"ipv6Address":"2001:db8:85a3:8d3:1319:8a2e:370:7344","networkAccessIdentifier":"123456789@domain.com","phoneNumber":"+123456789"}},"subscriptionExpireTime":"2023-01-17T13:18:23.682000+00:00","subscriptionMaxEvents":5},"properties":{"initialEvent":{"description":"Set to `true` by API consumer if consumer wants to get an event as soon as the subscription is created and current situation reflects event request.Up to API project decision to keep it.\nExample: Consumer subscribes to reachability SMS. If consumer sets initialEvent to true and device is already reachable by SMS, an event is triggered.\n","title":"initialEvent","type":"boolean"},"subscriptionDetail":{"$ref":"#/components/schemas/CreateSubscriptionDetail"},"subscriptionExpireTime":{"description":"The subscription expiration time (in date-time format) requested by the API consumer. Up to API project decision to keep it.","example":"2023-01-17T13:18:23.682000+00:00","format":"date-time","title":"subscriptionExpireTime","type":"string"},"subscriptionMaxEvents":{"description":"Identifies the maximum number of event reports to be generated (>=1) requested by the API consumer - Once this number is reached, the subscription ends. Up to API project decision to keep it.","example":5,"minimum":1,"title":"subscriptionMaxEvents","type":"integer"}},"required":["subscriptionDetail"],"title":"Config","type":"object"},"CreateSubscriptionDetail":{"description":"The detail of the requested event subscription.","example":{"device":{"ipv4Address":{"publicAddress":"84.125.93.10","publicPort":59765},"ipv6Address":"2001:db8:85a3:8d3:1319:8a2e:370:7344","networkAccessIdentifier":"123456789@domain.com","phoneNumber":"+123456789"}},"properties":{"device":{"$ref":"#/components/schemas/Device"}},"title":"CreateSubscriptionDetail","type":"object"},"DateTime":{"description":"Timestamp of when the occurrence happened.\nIf the time of the occurrence cannot be determined then this attribute MAY be set to some other time (such as the current time) by the CloudEvents producer,\nhowever all producers for the same source MUST be consistent in this respect. In other words,\neither they all use the actual time of the occurrence or they all use the same algorithm to determine the value used.\nIt must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.\nRecommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)\n","example":"2018-04-05T17:31:00+00:00","format":"date-time","title":"time","type":"string"},"Device":{"description":"End-user equipment able to connect to a mobile network. Examples of devices include smartphones or IoT sensors/actuators.\n\nThe developer can choose to provide the below specified device identifiers:\n\n* `ipv4Address`\n* `ipv6Address`\n* `phoneNumber`\n* `networkAccessIdentifier`\n\nNOTE: the MNO might support only a subset of these options. The API invoker can provide multiple identifiers to be compatible across different MNOs. In this case the identifiers MUST belong to the same device.\n","example":{"ipv4Address":{"publicAddress":"84.125.93.10","publicPort":59765},"ipv6Address":"2001:db8:85a3:8d3:1319:8a2e:370:7344","networkAccessIdentifier":"123456789@domain.com","phoneNumber":"+123456789"},"minProperties":1,"properties":{"ipv4Address":{"$ref":"#/components/schemas/DeviceIpv4Addr"},"ipv6Address":{"description":"The device should be identified by the observed IPv6 address, or by any single IPv6 address from within the subnet allocated to the device (e.g. adding ::0 to the /64 prefix).\n","example":"2001:db8:85a3:8d3:1319:8a2e:370:7344","format":"ipv6","title":"DeviceIpv6Address","type":"string"},"networkAccessIdentifier":{"description":"A public identifier addressing a subscription in a mobile network. In 3GPP terminology, it corresponds to the GPSI formatted with the External Identifier ({Local Identifier}@{Domain Identifier}). Unlike the telephone number, the network access identifier is not subjected to portability ruling in force, and is individually managed by each operator.","example":"123456789@domain.com","title":"NetworkAccessIdentifier","type":"string"},"phoneNumber":{"description":"A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.","example":"+123456789","pattern":"^\\+[1-9][0-9]{4,14}$","title":"PhoneNumber","type":"string"}},"title":"Device","type":"object"},"DeviceIpv4Addr":{"anyOf":[],"description":"The device should be identified by either the public (observed) IP address and port as seen by the application server, or the private (local) and any public (observed) IP addresses in use by the device (this information can be obtained by various means, for example from some DNS servers).\n\nIf the allocated and observed IP addresses are the same (i.e. NAT is not in use) then  the same address should be specified for both publicAddress and privateAddress.\n\nIf NAT64 is in use, the device should be identified by its publicAddress and publicPort, or separately by its allocated IPv6 address (field ipv6Address of the Device object)\n\nIn all cases, publicAddress must be specified, along with at least one of either privateAddress or publicPort, dependent upon which is known. In general, mobile devices cannot be identified by their public IPv4 address alone.\n","example":{"publicAddress":"84.125.93.10","publicPort":59765},"nullable":true,"properties":{"privateAddress":{"description":"A single IPv4 address with no subnet mask","example":"84.125.93.10","format":"ipv4","type":"string"},"publicAddress":{"description":"A single IPv4 address with no subnet mask","example":"84.125.93.10","format":"ipv4","type":"string"},"publicPort":{"description":"TCP or UDP port number","maximum":65535,"minimum":0,"type":"integer"}},"title":"DeviceIpv4Addr","type":"object"},"DeviceIpv6Address":{"description":"The device should be identified by the observed IPv6 address, or by any single IPv6 address from within the subnet allocated to the device (e.g. adding ::0 to the /64 prefix).\n","example":"2001:db8:85a3:8d3:1319:8a2e:370:7344","format":"ipv6","title":"DeviceIpv6Address","type":"string"},"ErrorInfo":{"properties":{"code":{"description":"Code given to this error","title":"code","type":"string"},"message":{"description":"Detailed error description","title":"message","type":"string"},"status":{"description":"HTTP response status code","title":"status","type":"integer"}},"required":["code","message","status"],"title":"ErrorInfo","type":"object"},"EventReachabilityData":{"allOf":[{"$ref":"#/components/schemas/CloudEvent"},{"properties":{"data":{"$ref":"#/components/schemas/ReachabilityDataSmsDisconnected"}},"type":"object"}],"description":"event structure for reachability data usage"},"EventReachabilityDisconnected":{"allOf":[{"$ref":"#/components/schemas/CloudEvent"},{"properties":{"data":{"$ref":"#/components/schemas/ReachabilityDataSmsDisconnected"}},"type":"object"}],"description":"event structure for disconnection"},"EventReachabilitySms":{"allOf":[{"$ref":"#/components/schemas/CloudEvent"},{"properties":{"data":{"$ref":"#/components/schemas/ReachabilityDataSmsDisconnected"}},"type":"object"}],"description":"event structure for reachability SMS usage"},"EventSubscriptionEnds":{"allOf":[{"$ref":"#/components/schemas/CloudEvent"},{"properties":{"data":{"$ref":"#/components/schemas/SubscriptionEnds"}},"type":"object"}],"description":"event structure for event subscription ends"},"EventTypeNotification":{"description":"reachability-data - Event triggered when the device is connected to the network for Data usage (regardless of the SMS reachability).\n\nreachability-sms - Event triggered when the device is connected to the network only for SMS usage\n\nreachability-disconnected - Event triggered when the device is not connected.\n\nsubscription-ends - Event triggered when the subscription is terminated\n","enum":["org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data","org.camaraproject.device-reachability-status-subscriptions.v0.reachability-sms","org.camaraproject.device-reachability-status-subscriptions.v0.reachability-disconnected","org.camaraproject.device-reachability-status-subscriptions.v0.subscription-ends"],"title":"EventTypeNotification","type":"string"},"HTTPSettings":{"properties":{"headers":{"additionalProperties":{"type":"string"},"description":"A set of key/value pairs that is copied into the HTTP request as custom headers.\n\nNOTE: Use/Applicability of this concept has not been discussed in Commonalities under the scope of Meta Release v0.4. When required by an API project as an option to meet a UC/Requirement, please generate an issue for Commonalities discussion about it.","title":"headers","type":"object"},"method":{"description":"The HTTP method to use for sending the message.","enum":["POST"],"title":"method","type":"string"}},"title":"HTTPSettings","type":"object"},"HTTPSubscriptionRequest":{"allOf":[{"$ref":"#/components/schemas/SubscriptionRequest"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/HTTPSettings"}},"type":"object"}]},"HTTPSubscriptionResponse":{"allOf":[{"$ref":"#/components/schemas/Subscription"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/HTTPSettings"}},"type":"object"}]},"MQTTSettings":{"properties":{"expiry":{"format":"int32","title":"expiry","type":"integer"},"qos":{"format":"int32","title":"qos","type":"integer"},"retain":{"title":"retain","type":"boolean"},"topicName":{"title":"topicName","type":"string"},"userProperties":{"title":"userProperties","type":"object"}},"required":["topicName"],"title":"MQTTSettings","type":"object"},"MQTTSubscriptionRequest":{"allOf":[{"$ref":"#/components/schemas/SubscriptionRequest"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/MQTTSettings"}},"type":"object"}]},"MQTTSubscriptionResponse":{"allOf":[{"$ref":"#/components/schemas/Subscription"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/MQTTSettings"}},"type":"object"}]},"NATSSettings":{"properties":{"subject":{"title":"subject","type":"string"}},"required":["subject"],"title":"NATSSettings","type":"object"},"NATSSubscriptionRequest":{"allOf":[{"$ref":"#/components/schemas/SubscriptionRequest"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/NATSSettings"}},"type":"object"}]},"NATSSubscriptionResponse":{"allOf":[{"$ref":"#/components/schemas/Subscription"},{"properties":{"protocolSettings":{"$ref":"#/components/schemas/NATSSettings"}},"type":"object"}]},"NetworkAccessIdentifier":{"description":"A public identifier addressing a subscription in a mobile network. In 3GPP terminology, it corresponds to the GPSI formatted with the External Identifier ({Local Identifier}@{Domain Identifier}). Unlike the telephone number, the network access identifier is not subjected to portability ruling in force, and is individually managed by each operator.","example":"123456789@domain.com","title":"NetworkAccessIdentifier","type":"string"},"PhoneNumber":{"description":"A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.","example":"+123456789","pattern":"^\\+[1-9][0-9]{4,14}$","title":"PhoneNumber","type":"string"},"PlainCredential":{"allOf":[{"$ref":"#/components/schemas/SinkCredential"},{"properties":{"identifier":{"description":"The identifier might be an account or username.","type":"string"},"secret":{"description":"The secret might be a password or passphrase.","type":"string"}},"required":["identifier","secret"],"type":"object"}],"description":"A plain credential as a combination of an identifier and a secret.","type":"object"},"Port":{"description":"TCP or UDP port number","maximum":65535,"minimum":0,"type":"integer"},"Protocol":{"description":"Identifier of a delivery protocol. Only HTTP is allowed for now","enum":["HTTP","MQTT3","MQTT5","AMQP","NATS","KAFKA"],"example":"HTTP","title":"Protocol","type":"string"},"ReachabilityDataSmsDisconnected":{"properties":{"device":{"$ref":"#/components/schemas/Device"},"subscriptionId":{"description":"The unique identifier of the subscription in the scope of the subscription manager. When this information is contained within an event notification, this concept SHALL be referred as `subscriptionId` as per [Commonalities Event Notification Model](https://github.com/camaraproject/Commonalities/blob/r2.3/documentation/API-design-guidelines.md#122-event-notification).","example":"qs15-h556-rt89-1298","title":"SubscriptionId","type":"string"}},"required":["subscriptionId"],"title":"ReachabilityDataSmsDisconnected"},"RefreshTokenCredential":{"allOf":[{"$ref":"#/components/schemas/SinkCredential"},{"properties":{"accessToken":{"description":"REQUIRED. An access token is a previously acquired token granting access to the target resource.","type":"string"},"accessTokenExpiresUtc":{"description":"REQUIRED. An absolute (UTC) timestamp at which the token shall be considered expired.\nIn the case of an ACCESS_TOKEN_EXPIRED termination reason, implementation should notify the client before the expiration date.\nIf the access token is a JWT and registered \"exp\" (Expiration Time) claim is present, the two expiry times should match.\nIt must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.\nRecommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)\n","example":"2023-07-03T12:27:08.312000+00:00","format":"date-time","type":"string"},"accessTokenType":{"description":"REQUIRED. Type of the access token (See [OAuth 2.0](https://tools.ietf.org/html/rfc6749#section-7.1)).","enum":["bearer"],"type":"string"},"refreshToken":{"description":"REQUIRED. An refresh token credential used to acquire access tokens.","type":"string"},"refreshTokenEndpoint":{"description":"REQUIRED. A URL at which the refresh token can be traded for an access token.","format":"uri","type":"string"}},"type":"object"}],"description":"An access token credential with a refresh token.","required":["accessToken","accessTokenExpiresUtc","accessTokenType","refreshToken","refreshTokenEndpoint"],"type":"object"},"SingleIpv4Addr":{"description":"A single IPv4 address with no subnet mask","example":"84.125.93.10","format":"ipv4","type":"string"},"SinkCredential":{"description":"A sink credential provides authentication or authorization information necessary to enable delivery of events to a target.","discriminator":{"mapping":{"ACCESSTOKEN":"#/components/schemas/AccessTokenCredential","PLAIN":"#/components/schemas/PlainCredential","REFRESHTOKEN":"#/components/schemas/RefreshTokenCredential"},"propertyName":"credentialType"},"example":{"credentialType":"PLAIN"},"properties":{"credentialType":{"description":"The type of the credential.\nNote: Type of the credential - MUST be set to ACCESSTOKEN for now\n","enum":["PLAIN","ACCESSTOKEN","REFRESHTOKEN"],"title":"credentialType","type":"string"}},"required":["credentialType"],"title":"SinkCredential","type":"object"},"Source":{"description":"Identifies the context in which an event happened - be a non-empty `URI-reference` like:\n- URI with a DNS authority:\n  * https://github.com/cloudevents\n  * mailto:cncf-wg-serverless@lists.cncf.io\n- Universally-unique URN with a UUID:\n  * urn:uuid:6e8bc430-9c3a-11d9-9669-0800200c9a66\n- Application-specific identifier:\n  * /cloudevents/spec/pull/123\n  * 1-555-123-4567\n","example":"https://notificationSendServer12.supertelco.com","format":"uri-reference","minLength":1,"title":"source","type":"string"},"Subscription":{"description":"Represents a event-type subscription.","discriminator":{"mapping":{"AMQP":"#/components/schemas/AMQPSubscriptionResponse","HTTP":"#/components/schemas/HTTPSubscriptionResponse","KAFKA":"#/components/schemas/ApacheKafkaSubscriptionResponse","MQTT3":"#/components/schemas/MQTTSubscriptionResponse","MQTT5":"#/components/schemas/MQTTSubscriptionResponse","NATS":"#/components/schemas/NATSSubscriptionResponse"},"propertyName":"protocol"},"example":{"config":{"initialEvent":true,"subscriptionDetail":{"device":{"phoneNumber":"+123456789"}},"subscriptionExpireTime":"2024-07-17T13:18:23.682000+00:00","subscriptionMaxEvents":5},"expiresAt":"2024-07-03T21:12:02.871000+00:00","id":"550e8400-e29b-41d4-a716-446655440000","protocol":"HTTP","sink":"https://endpoint.example.com/sink","startsAt":"2024-07-03T21:12:02.871000+00:00","status":"ACTIVE","types":["org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data"]},"properties":{"config":{"$ref":"#/components/schemas/Config"},"expiresAt":{"description":"Date when the event subscription will expire. Only provided when `subscriptionExpireTime` is indicated by API client or Telco Operator has specific policy about that.\nIt must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.\nRecommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)\n","example":"2023-07-03T12:27:08.312000+00:00","format":"date-time","type":"string"},"id":{"description":"The unique identifier of the subscription in the scope of the subscription manager. When this information is contained within an event notification, this concept SHALL be referred as `subscriptionId` as per [Commonalities Event Notification Model](https://github.com/camaraproject/Commonalities/blob/r2.3/documentation/API-design-guidelines.md#122-event-notification).","example":"qs15-h556-rt89-1298","title":"SubscriptionId","type":"string"},"protocol":{"$ref":"#/components/schemas/Protocol"},"sink":{"description":"The address to which events shall be delivered using the selected protocol.","example":"https://endpoint.example.com/sink","format":"url","type":"string"},"startsAt":{"description":"Date when the event subscription will begin/began\nIt must follow [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) and must have time zone.\nRecommended format is yyyy-MM-dd'T'HH:mm:ss.SSSZ (i.e. which allows 2023-07-03T14:27:08.312+02:00 or 2023-07-03T12:27:08.312Z)\n","example":"2023-07-03T12:27:08.312000+00:00","format":"date-time","type":"string"},"status":{"description":"Current status of the subscription - Management of Subscription State engine is not mandatory for now. Note not all statuses may be considered to be implemented. Details:\n  - `ACTIVATION_REQUESTED`: Subscription creation (POST) is triggered but subscription creation process is not finished yet.\n  - `ACTIVE`: Subscription creation process is completed. Subscription is fully operative.\n  - `INACTIVE`: Subscription is temporarily inactive, but its workflow logic is not deleted.\n  - `EXPIRED`: Subscription is ended (no longer active). This status applies when subscription is ended due to `SUBSCRIPTION_EXPIRED` or `ACCESS_TOKEN_EXPIRED` event.\n  - `DELETED`: Subscription is ended as deleted (no longer active). This status applies when subscription information is kept (i.e. subscription workflow is no longer active but its meta-information is kept).","enum":["ACTIVATION_REQUESTED","ACTIVE","EXPIRED","INACTIVE","DELETED"],"type":"string"},"types":{"description":"Camara Event types eligible to be delivered by this subscription.\nNote: For the current Commonalities API design guidelines, only one event type per subscription is allowed\n","items":{"$ref":"#/components/schemas/SubscriptionEventType"},"maxItems":1,"minItems":1,"type":"array"}},"required":["config","id","protocol","sink","types"],"title":"Subscription","type":"object"},"SubscriptionAsync":{"description":"Response for a device reachability status operation managed asynchronously (Creation or Deletion)","example":{"id":"qs15-h556-rt89-1298"},"properties":{"id":{"description":"The unique identifier of the subscription in the scope of the subscription manager. When this information is contained within an event notification, this concept SHALL be referred as `subscriptionId` as per [Commonalities Event Notification Model](https://github.com/camaraproject/Commonalities/blob/r2.3/documentation/API-design-guidelines.md#122-event-notification).","example":"qs15-h556-rt89-1298","title":"SubscriptionId","type":"string"}},"title":"SubscriptionAsync","type":"object"},"SubscriptionEnds":{"description":"Event detail structure for org.camaraproject.device-reachability-status-subscriptions.v0.subscription-ends event","properties":{"device":{"$ref":"#/components/schemas/Device"},"subscriptionId":{"description":"The unique identifier of the subscription in the scope of the subscription manager. When this information is contained within an event notification, this concept SHALL be referred as `subscriptionId` as per [Commonalities Event Notification Model](https://github.com/camaraproject/Commonalities/blob/r2.3/documentation/API-design-guidelines.md#122-event-notification).","example":"qs15-h556-rt89-1298","title":"SubscriptionId","type":"string"},"terminationDescription":{"title":"terminationDescription","type":"string"},"terminationReason":{"$ref":"#/components/schemas/TerminationReason"}},"required":["subscriptionId","terminationReason"],"title":"SubscriptionEnds","type":"object"},"SubscriptionEventType":{"description":"reachability-data - Event triggered when the device is connected to the network for Data usage (regardless of the SMS reachability).\n\nreachability-sms - Event triggered when the device is connected to the network only for SMS usage\n\nreachability-disconnected - Event triggered when the device is not connected.\n","enum":["org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data","org.camaraproject.device-reachability-status-subscriptions.v0.reachability-sms","org.camaraproject.device-reachability-status-subscriptions.v0.reachability-disconnected"],"title":"SubscriptionEventType","type":"string"},"SubscriptionId":{"description":"The unique identifier of the subscription in the scope of the subscription manager. When this information is contained within an event notification, this concept SHALL be referred as `subscriptionId` as per [Commonalities Event Notification Model](https://github.com/camaraproject/Commonalities/blob/r2.3/documentation/API-design-guidelines.md#122-event-notification).","example":"qs15-h556-rt89-1298","title":"SubscriptionId","type":"string"},"SubscriptionRequest":{"description":"The request for creating a event-type event subscription","discriminator":{"mapping":{"AMQP":"#/components/schemas/AMQPSubscriptionRequest","HTTP":"#/components/schemas/HTTPSubscriptionRequest","KAFKA":"#/components/schemas/ApacheKafkaSubscriptionRequest","MQTT3":"#/components/schemas/MQTTSubscriptionRequest","MQTT5":"#/components/schemas/MQTTSubscriptionRequest","NATS":"#/components/schemas/NATSSubscriptionRequest"},"propertyName":"protocol"},"example":{"config":{"initialEvent":true,"subscriptionDetail":{"device":{"ipv4Address":{"publicAddress":"84.125.93.10","publicPort":59765},"ipv6Address":"2001:db8:85a3:8d3:1319:8a2e:370:7344","networkAccessIdentifier":"123456789@domain.com","phoneNumber":"+123456789"}},"subscriptionExpireTime":"2023-01-17T13:18:23.682000+00:00","subscriptionMaxEvents":5},"protocol":"HTTP","sink":"https://endpoint.example.com/sink","sinkCredential":{"credentialType":"PLAIN"},"types":["org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data"]},"properties":{"config":{"$ref":"#/components/schemas/Config"},"protocol":{"$ref":"#/components/schemas/Protocol"},"sink":{"description":"The address to which events shall be delivered using the selected protocol.","example":"https://endpoint.example.com/sink","format":"uri","title":"sink","type":"string"},"sinkCredential":{"$ref":"#/components/schemas/SinkCredential"},"types":{"description":"Camara Event types eligible to be delivered by this subscription.\nNote: For the current Commonalities API design guidelines, only one event type per subscription is allowed, yet in the following releases use of array of event types SHALL be specified without changing this definition.\n","items":{"$ref":"#/components/schemas/SubscriptionEventType"},"maxItems":1,"minItems":1,"title":"types","type":"array"}},"required":["config","protocol","sink","types"],"title":"SubscriptionRequest","type":"object"},"TerminationReason":{"description":"- NETWORK_TERMINATED - API server stopped sending notification\n- SUBSCRIPTION_EXPIRED - Subscription expire time (optionally set by the requester) has been reached\n- MAX_EVENTS_REACHED - Maximum number of events (optionally set by the requester) has been reached\n- ACCESS_TOKEN_EXPIRED - Access Token sinkCredential (optionally set by the requester) expiration time has been reached\n- SUBSCRIPTION_DELETED - Subscription was deleted by the requester\n","enum":["MAX_EVENTS_REACHED","NETWORK_TERMINATED","SUBSCRIPTION_EXPIRED","ACCESS_TOKEN_EXPIRED","SUBSCRIPTION_DELETED"],"title":"TerminationReason","type":"string"},"createDeviceReachabilityStatusSubscription_400_response":{"allOf":[{"$ref":"#/components/schemas/ErrorInfo"},{"properties":{"code":{"enum":["INVALID_ARGUMENT","OUT_OF_RANGE","INVALID_PROTOCOL","INVALID_CREDENTIAL","INVALID_TOKEN"],"type":"string"},"status":{"enum":[400],"type":"number"}},"type":"object"}],"example":{"code":"INVALID_ARGUMENT","message":"message","status":6.027456183070403},"title":"createDeviceReachabilityStatusSubscription_400_response"},"createDeviceReachabilityStatusSubscription_403_response":{"allOf":[{"$ref":"#/components/schemas/ErrorInfo"},{"properties":{"code":{"enum":["PERMISSION_DENIED","SUBSCRIPTION_MISMATCH"],"type":"string"},"status":{"enum":[403],"type":"number"}},"type":"object"}],"example":{"code":"PERMISSION_DENIED","message":"message","status":5.962133916683182},"title":"createDeviceReachabilityStatusSubscription_403_response"},"createDeviceReachabilityStatusSubscription_409_response":{"allOf":[{"$ref":"#/components/schemas/ErrorInfo"},{"properties":{"code":{"enum":["ABORTED","ALREADY_EXISTS"],"type":"string"},"status":{"enum":[409],"type":"number"}},"type":"object"}],"example":{"code":"ABORTED","message":"message","status":2.3021358869347655},"title":"createDeviceReachabilityStatusSubscription_409_response"},"createDeviceReachabilityStatusSubscription_422_response":{"allOf":[{"$ref":"#/components/schemas/ErrorInfo"},{"properties":{"code":{"enum":["IDENTIFIER_MISMATCH","SERVICE_NOT_APPLICABLE","MISSING_IDENTIFIER","UNSUPPORTED_IDENTIFIER","UNNECESSARY_IDENTIFIER","MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED"],"type":"string"},"status":{"enum":[422],"type":"number"}},"type":"object"}],"example":{"code":"IDENTIFIER_MISMATCH","message":"message","status":9.301444243932576},"title":"createDeviceReachabilityStatusSubscription_422_response"},"createDeviceReachabilityStatusSubscription_429_response":{"allOf":[{"$ref":"#/components/schemas/ErrorInfo"},{"properties":{"code":{"enum":["QUOTA_EXCEEDED","TOO_MANY_REQUESTS"],"type":"string"},"status":{"enum":[429],"type":"number"}},"type":"object"}],"example":{"code":"QUOTA_EXCEEDED","message":"message","status":2.027123023002322},"title":"createDeviceReachabilityStatusSubscription_429_response"},"postNotification_410_response":{"allOf":[{"$ref":"#/components/schemas/ErrorInfo"},{"properties":{"code":{"enum":["GONE"],"type":"string"},"status":{"enum":[410],"type":"number"}},"type":"object"}],"example":{"code":"GONE","message":"message","status":6.027456183070403},"title":"postNotification_410_response"},"retrieveDeviceReachabilityStatusSubscriptionList_400_response":{"allOf":[{"$ref":"#/components/schemas/ErrorInfo"},{"properties":{"code":{"enum":["INVALID_ARGUMENT"],"type":"string"},"status":{"enum":[400],"type":"number"}},"type":"object"}],"example":{"code":"INVALID_ARGUMENT","message":"message","status":6.027456183070403},"title":"retrieveDeviceReachabilityStatusSubscriptionList_400_response"},"retrieveDeviceReachabilityStatusSubscriptionList_401_response":{"allOf":[{"$ref":"#/components/schemas/ErrorInfo"},{"properties":{"code":{"enum":["UNAUTHENTICATED","AUTHENTICATION_REQUIRED"],"type":"string"},"status":{"enum":[401],"type":"number"}},"type":"object"}],"example":{"code":"UNAUTHENTICATED","message":"message","status":5.962133916683182},"title":"retrieveDeviceReachabilityStatusSubscriptionList_401_response"},"retrieveDeviceReachabilityStatusSubscriptionList_403_response":{"allOf":[{"$ref":"#/components/schemas/ErrorInfo"},{"properties":{"code":{"enum":["PERMISSION_DENIED"],"type":"string"},"status":{"enum":[403],"type":"number"}},"type":"object"}],"example":{"code":"PERMISSION_DENIED","message":"message","status":2.3021358869347655},"title":"retrieveDeviceReachabilityStatusSubscriptionList_403_response"},"retrieveDeviceReachabilityStatusSubscription_404_response":{"allOf":[{"$ref":"#/components/schemas/ErrorInfo"},{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"status":{"enum":[404],"type":"number"}},"type":"object"}],"example":{"code":"NOT_FOUND","message":"message","status":6.027456183070403},"title":"retrieveDeviceReachabilityStatusSubscription_404_response"}},"securitySchemes":{"notificationsBearerAuth":{"bearerFormat":"{$request.body#/sinkCredential.credentialType}","scheme":"bearer","type":"http","x-bearerInfoFunc":"openapi_server.controllers.security_controller.info_from_notificationsBearerAuth"},"openId":{"openIdConnectUrl":"https://example.com/.well-known/openid-configuration","type":"openIdConnect","x-scopeValidateFunc":"openapi_server.controllers.security_controller.validate_scope_openId","x-tokenInfoFunc":"openapi_server.controllers.security_controller.info_from_openId"}}},"externalDocs":{"description":"Product documentation at CAMARA","url":"https://github.com/camaraproject/DeviceStatus"},"info":{"description":"This API provides the API consumer with the ability to subscribe to Reachability status events.\n\n# Introduction\n\n## Reachability Status\nAPI consumer is able to be notified whether the reachability status of a certain user device has changed to either data- or sms-usage.\nThis capability is provided via a subscription  request - in this case the reachability situation is part of the event notification, which is sent back to the event subscriber when reachability situation has changed.\n\n# Relevant terms and definitions\n\n* **Device**: A device refers to any physical entity that can connect to a network and participate in network communication.\n  At least one identifier for the device (user equipment) out of four options: IPv4 address, IPv6 address, Phone number, or Network Access Identifier (not supported for this API version) assigned by the mobile network operator for the device.\n\n# API Functionality\n\nThe API exposes following capability:\n\n## Device reachability status subscription\n\nThese endpoints allow to manage event subscription on reachability device status event.\nThe CAMARA subscription model is detailed in the CAMARA API design guideline document and follows CloudEvents specification.\n\nWhen subscribing, it is mandatory to provide the event `types` you are subscribing to, as multiple subscription-types are managed by this API.\n\nFollowing event ``types`` are managed for this API:\n  - ``org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data``: Event triggered when the device is connected to the network for Data usage (regardless of the SMS reachability).\n\n  - ``org.camaraproject.device-reachability-status-subscriptions.v0.reachability-sms``: Event triggered when the device is connected to the network only for SMS usage\n\n  - ``org.camaraproject.device-reachability-status-subscriptions.v0.reachability-disconnected``: Event triggered when the device is not connected.\n\nNote: Additionally to these list, ``org.camaraproject.device-reachability-status-subscriptions.v0.subscription-ends`` notification `type` is sent when the subscription ends.\nThis notification does not require dedicated subscription.\n\nIt is used in following cases:\n  - the subscription expire time (optionally set by the requester) has been reached\n  - the maximum number of subscription events (optionally set by the requester) has been reached\n  - the subscription was deleted by the requester\n  - the Access Token `sinkCredential` (optionally set by the requester) expiration time has been reached\n  - the API server has to stop sending notification prematurely\n\n**Note on combined usage of ``initialEvent`` and ``subscriptionMaxEvents``**:\n\nIf an event is triggered following ``initialEvent`` set to true,\nthis event will be counted towards ``subscriptionMaxEvents`` (if provided).\n\n\n**Clarification on ``initialEvent`` & ``event-type`` behaviour:**\n\nFollowing table illustrate behaviour regarding event triggering depending on **initial** reachability state of the device:\n\n| subscribed event-type | device reachability status at subscription time | event sent if ``initialEvent`` set to true | Explanation |\n| ----------------------| ------------- | --------------- | ---------------|\n| reachability-data  | Device can use data |   Yes | The device is reachable for data, so the event is triggered. |\n| reachability-data  | Device is disconnected or SMS-only | No | The device cannot use data, so no event is sent. |\n| reachability-sms  | Device can use data | No | The device can use data, but for thids event is only for SMS. |\n| reachability-sms  |  Device is SMS-only | Yes | The device supports SMS, so the event is triggered. |\n| reachability-sms  | Device is disconnected | No | The device cannot send SMS, so no event is send. |\n| reachability-disconnected  | Device can use data or SMS usage | No | The device is reachable, so no \"disconnected\" event is sent. |\n| reachability-disconnected  | Device is disconnected | Yes | The device is disconnected, so the event is triggered. |\n\n### Notifications callback\n\nThis endpoint describes the event notification received on subscription listener side when the event occurred.\nAs for subscription, detailed description of the event notification is provided in the CAMARA API design guideline document.\n\n_**WARNING**: This callback endpoint must be exposed on the consumer side as `POST /{$request.body#/sink}`.\n  Developers may provide a callback URL on which notifications regarding reachability-status can be received from the service provider.\n  If an event occurs the application will send events to the provided webhook - `sink`._\n\n# Further info and support\n\n## Authorization and authentication\n\nThe \"Camara Security and Interoperability Profile\" provides details of how an API consumer requests an access token. Please refer to Identity and Consent Management (https://github.com/camaraproject/IdentityAndConsentManagement/) for the released version of the profile.\n\nThe specific authorization flows to be used will be agreed upon during the onboarding process, happening between the API consumer and the API provider, taking into account the declared purpose for accessing the API, whilst also being subject to the prevailing legal framework dictated by local legislation.\n\nIn cases where personal data is processed by the API and users can exercise their rights through mechanisms such as opt-in and/or opt-out, the use of three-legged access tokens is mandatory. This ensures that the API remains in compliance with privacy regulations, upholding the principles of transparency and user-centric privacy-by-design.\n\n## Identifying the device from the access token\n\nThis API requires the API consumer to identify a device as the subject of the API as follows:\n- When the API is invoked using a two-legged access token, the subject will be identified from the optional `device` object, which therefore MUST be provided.\n\n- When a three-legged access token is used however, this optional identifier MUST NOT be provided, as the subject will be uniquely identified from the access token.\n\nThis approach simplifies API usage for API consumers using a three-legged access token to invoke the API by relying on the information that is associated with the access token and was identified during the authentication process.\n\n### Error handling:\n- If the subject cannot be identified from the access token and the optional `device` object is not included in the request, then the server will return an error with the `422 MISSING_IDENTIFIER` error code.\n\n- If the subject can be identified from the access token and the optional `device` object is also included in the request, then the server will return an error with the `422 UNNECESSARY_IDENTIFIER` error code. This will be the case even if the same device is identified by these two methods, as the server is unable to make this comparison.\n\n## Multi-SIM scenario handling\n\nIn multi-SIM scenarios where more than one mobile device is associated with a phone number (e.g. a smartphone with an associated smartwatch), it might not be possible to uniquely identify from that phone number the device for which reachability status notifications should be provided. If the phone number is used as the device identifier when creating a subscription for a multi-SIM scenario, the API may:\n- respond with an error, or\n- provide reachability status update notifications for the multi-SIM group as a whole, or\n- provide reachability status update notifications only for a single device in the multi-SIM group, which may not be the intended device.\n\nPossible solutions in such a scenario include:\n- Using the authorisation code flow to obtain an access token, which will automatically identify the intended device\n- Identifying the intended device from a unique identifier for that device, such as its source IP address and port\n- Check with the SIM provider whether a unique \"secondary\" phone number is already associated with each device, and use the secondary phone number to identify the intended device if available.\n","license":{"name":"Apache 2.0","url":"https://www.apache.org/licenses/LICENSE-2.0.html"},"title":"Device Reachability Status Subscriptions","version":"0.7.0","x-camara-commonalities":0.5},"openapi":"3.0.3","paths":{"/subscriptions":{"get":{"description":"Retrieve a list of device reachability status event subscription(s)","operationId":"retrieve_device_reachability_status_subscription_list","parameters":[{"description":"Correlation id for the different services","explode":false,"in":"header","name":"x-correlator","required":false,"schema":{"example":"b4333c46-49c0-4f62-80d7-f0ef930f1c46","pattern":"^[a-zA-Z0-9-]{0,55}$","type":"string"},"style":"simple"}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Subscription"},"minItems":0,"type":"array"}}},"description":"List of event subscription details","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"400":{"content":{"application/json":{"examples":{"GENERIC_400_INVALID_ARGUMENT":{"description":"Invalid Argument. Generic Syntax Exception","value":{"code":"INVALID_ARGUMENT","message":"Client specified an invalid argument, request body or query param.","status":400}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscriptionList_400_response"}}},"description":"Problem with the client request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"401":{"content":{"application/json":{"examples":{"GENERIC_401_AUTHENTICATION_REQUIRED":{"description":"New authentication is needed, authentication is no longer valid","value":{"code":"AUTHENTICATION_REQUIRED","message":"New authentication is required.","status":401}},"GENERIC_401_UNAUTHENTICATED":{"description":"Request cannot be authenticated","value":{"code":"UNAUTHENTICATED","message":"Request not authenticated due to missing, invalid, or expired credentials.","status":401}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscriptionList_401_response"}}},"description":"Authentication problem with the client request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"403":{"content":{"application/json":{"examples":{"GENERIC_403_PERMISSION_DENIED":{"description":"Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security","value":{"code":"PERMISSION_DENIED","message":"Client does not have sufficient permissions to perform this action.","status":403}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscriptionList_403_response"}}},"description":"Client does not have sufficient permission","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}}},"security":[{"openId":["device-reachability-status-subscriptions:read"]}],"summary":"Retrieve a list of device reachability status event subscription","tags":["Device reachability status subscription"],"x-openapi-router-controller":"openapi_server.controllers.device_reachability_status_subscription_controller"},"post":{"callbacks":{"notifications":{"{$request.body#/sink}":{"post":{"description":"Important: this endpoint is to be implemented by the API consumer.\nThe Device status server will call this endpoint whenever any device reachability status related event occurs.\n","operationId":"postNotification","parameters":[{"description":"Correlation id for the different services","explode":false,"in":"header","name":"x-correlator","required":false,"schema":{"example":"b4333c46-49c0-4f62-80d7-f0ef930f1c46","pattern":"^[a-zA-Z0-9-]{0,55}$","type":"string"},"style":"simple"}],"requestBody":{"content":{"application/cloudevents+json":{"examples":{"reachability-data":{"$ref":"#/components/examples/REACHABILITY_DATA"},"reachability-disconnected":{"$ref":"#/components/examples/REACHABILITY_DISCONNECTED"},"reachability-sms":{"$ref":"#/components/examples/REACHABILITY_SMS"},"subscription-ends":{"$ref":"#/components/examples/SUBSCRIPTION_ENDS"}},"schema":{"$ref":"#/components/schemas/CloudEvent"}}},"required":true},"responses":{"204":{"description":"Successful notification","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"400":{"content":{"application/json":{"examples":{"GENERIC_400_INVALID_ARGUMENT":{"description":"Invalid Argument. Generic Syntax Exception","value":{"code":"INVALID_ARGUMENT","message":"Client specified an invalid argument, request body or query param.","status":400}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscriptionList_400_response"}}},"description":"Problem with the client request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"401":{"content":{"application/json":{"examples":{"GENERIC_401_AUTHENTICATION_REQUIRED":{"description":"New authentication is needed, authentication is no longer valid","value":{"code":"AUTHENTICATION_REQUIRED","message":"New authentication is required.","status":401}},"GENERIC_401_UNAUTHENTICATED":{"description":"Request cannot be authenticated","value":{"code":"UNAUTHENTICATED","message":"Request not authenticated due to missing, invalid, or expired credentials.","status":401}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscriptionList_401_response"}}},"description":"Authentication problem with the client request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"403":{"content":{"application/json":{"examples":{"GENERIC_403_PERMISSION_DENIED":{"description":"Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security","value":{"code":"PERMISSION_DENIED","message":"Client does not have sufficient permissions to perform this action.","status":403}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscriptionList_403_response"}}},"description":"Client does not have sufficient permission","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"410":{"content":{"application/json":{"examples":{"GENERIC_410_GONE":{"description":"Use in notifications flow to allow API Consumer to indicate that its callback is no longer available","value":{"code":"GONE","message":"Access to the target resource is no longer available.","status":410}}},"schema":{"$ref":"#/components/schemas/postNotification_410_response"}}},"description":"Gone","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"429":{"content":{"application/json":{"examples":{"GENERIC_429_QUOTA_EXCEEDED":{"description":"Request is rejected due to exceeding a business quota limit","value":{"code":"QUOTA_EXCEEDED","message":"Out of resource quota.","status":429}},"GENERIC_429_TOO_MANY_REQUESTS":{"description":"Access to the API has been temporarily blocked due to rate or spike arrest limits being reached","value":{"code":"TOO_MANY_REQUESTS","message":"Rate limit reached.","status":429}}},"schema":{"$ref":"#/components/schemas/createDeviceReachabilityStatusSubscription_429_response"}}},"description":"Too Many Requests","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}}},"security":[{},{"notificationsBearerAuth":[]}],"summary":"notifications callback","x-callback-request":true}}}},"description":"Create a device reachability status event subscription for a device","operationId":"create_device_reachability_status_subscription","parameters":[{"description":"Correlation id for the different services","explode":false,"in":"header","name":"x-correlator","required":false,"schema":{"example":"b4333c46-49c0-4f62-80d7-f0ef930f1c46","pattern":"^[a-zA-Z0-9-]{0,55}$","type":"string"},"style":"simple"}],"requestBody":{"content":{"application/json":{"examples":{"Create Subscription":{"$ref":"#/components/examples/CREATE_SUBSCRIPTION"}},"schema":{"$ref":"#/components/schemas/SubscriptionRequest"}}},"required":true},"responses":{"201":{"content":{"application/json":{"examples":{"subscription-active":{"$ref":"#/components/examples/SUBSCRIPTION_ACTIVE"}},"schema":{"$ref":"#/components/schemas/Subscription"}}},"description":"Created","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"202":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscriptionAsync"}}},"description":"Request accepted to be processed. It applies for async creation process.","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"400":{"content":{"application/json":{"examples":{"GENERIC_400_INVALID_ARGUMENT":{"description":"Invalid Argument. Generic Syntax Exception","value":{"code":"INVALID_ARGUMENT","message":"Client specified an invalid argument, request body or query param.","status":400}},"GENERIC_400_INVALID_CREDENTIAL":{"description":"Invalid sink credential type","value":{"code":"INVALID_CREDENTIAL","message":"Only Access token is supported","status":400}},"GENERIC_400_INVALID_PROTOCOL":{"description":"Invalid protocol for events subscription management","value":{"code":"INVALID_PROTOCOL","message":"Only HTTP is supported","status":400}},"GENERIC_400_INVALID_TOKEN":{"description":"Invalid token type for sink credential of type ACCESSTOKEN","value":{"code":"INVALID_TOKEN","message":"Only bearer token is supported","status":400}},"GENERIC_400_OUT_OF_RANGE":{"description":"Out of Range. Specific Syntax Exception used when a given field has a pre-defined range or a invalid filter criteria combination is requested","value":{"code":"OUT_OF_RANGE","message":"Client specified an invalid range.","status":400}}},"schema":{"$ref":"#/components/schemas/createDeviceReachabilityStatusSubscription_400_response"}}},"description":"Problem with the client request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"401":{"content":{"application/json":{"examples":{"GENERIC_401_AUTHENTICATION_REQUIRED":{"description":"New authentication is needed, authentication is no longer valid","value":{"code":"AUTHENTICATION_REQUIRED","message":"New authentication is required.","status":401}},"GENERIC_401_UNAUTHENTICATED":{"description":"Request cannot be authenticated","value":{"code":"UNAUTHENTICATED","message":"Request not authenticated due to missing, invalid, or expired credentials.","status":401}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscriptionList_401_response"}}},"description":"Authentication problem with the client request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"403":{"content":{"application/json":{"examples":{"GENERIC_403_PERMISSION_DENIED":{"description":"Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security","value":{"code":"PERMISSION_DENIED","message":"Client does not have sufficient permissions to perform this action.","status":403}},"GENERIC_403_SUBSCRIPTION_MISMATCH":{"description":"Inconsistent access token for requested subscription","value":{"code":"SUBSCRIPTION_MISMATCH","message":"Inconsistent access token for requested events subscription","status":403}}},"schema":{"$ref":"#/components/schemas/createDeviceReachabilityStatusSubscription_403_response"}}},"description":"Client does not have sufficient permission","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"409":{"content":{"application/json":{"examples":{"GENERIC_409_ABORTED":{"description":"Concurreny of processes of the same nature/scope","value":{"code":"ABORTED","message":"Concurrency conflict.","status":409}},"GENERIC_409_ALREADY_EXISTS":{"description":"Trying to create an existing resource","value":{"code":"ALREADY_EXISTS","message":"The resource that a client tried to create already exists.","status":409}}},"schema":{"$ref":"#/components/schemas/createDeviceReachabilityStatusSubscription_409_response"}}},"description":"Conflict","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"422":{"content":{"application/json":{"examples":{"GENERIC_422_IDENTIFIER_MISMATCH":{"description":"Inconsistency between identifiers not pointing to the same device","value":{"code":"IDENTIFIER_MISMATCH","message":"Provided identifiers are not consistent.","status":422}},"GENERIC_422_MISSING_IDENTIFIER":{"description":"An identifier is not included in the request and the device or phone number identification cannot be derived from the 3-legged access token","value":{"code":"MISSING_IDENTIFIER","message":"The device cannot be identified.","status":422}},"GENERIC_422_MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED":{"description":"Multi event types subscription is not supported","value":{"code":"MULTIEVENT_SUBSCRIPTION_NOT_SUPPORTED","message":"Multi event types subscription not managed","status":422}},"GENERIC_422_SERVICE_NOT_APPLICABLE":{"description":"Service not applicable for the provided identifier","value":{"code":"SERVICE_NOT_APPLICABLE","message":"The service is not available for the provided identifier.","status":422}},"GENERIC_422_UNNECESSARY_IDENTIFIER":{"description":"An explicit identifier is provided when a device or phone number has already been identified from the access token","value":{"code":"UNNECESSARY_IDENTIFIER","message":"The device is already identified by the access token.","status":422}},"GENERIC_422_UNSUPPORTED_IDENTIFIER":{"description":"None of the provided identifiers is supported by the implementation","value":{"code":"UNSUPPORTED_IDENTIFIER","message":"The identifier provided is not supported.","status":422}}},"schema":{"$ref":"#/components/schemas/createDeviceReachabilityStatusSubscription_422_response"}}},"description":"Unprocessable Entity","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"429":{"content":{"application/json":{"examples":{"GENERIC_429_QUOTA_EXCEEDED":{"description":"Request is rejected due to exceeding a business quota limit","value":{"code":"QUOTA_EXCEEDED","message":"Out of resource quota.","status":429}},"GENERIC_429_TOO_MANY_REQUESTS":{"description":"Access to the API has been temporarily blocked due to rate or spike arrest limits being reached","value":{"code":"TOO_MANY_REQUESTS","message":"Rate limit reached.","status":429}}},"schema":{"$ref":"#/components/schemas/createDeviceReachabilityStatusSubscription_429_response"}}},"description":"Too Many Requests","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}}},"security":[{"openId":["device-reachability-status-subscriptions:org.camaraproject.device-reachability-status-subscriptions.v0.reachability-data:create","device-reachability-status-subscriptions:org.camaraproject.device-reachability-status-subscriptions.v0.reachability-sms:create","device-reachability-status-subscriptions:org.camaraproject.device-reachability-status-subscriptions.v0.reachability-disconnected:create"]}],"summary":"Create a device reachability status event subscription for a device","tags":["Device reachability status subscription"],"x-openapi-router-controller":"openapi_server.controllers.device_reachability_status_subscription_controller"}},"/subscriptions/{subscriptionId}":{"delete":{"description":"Delete a given subscription by ID","operationId":"delete_device_reachability_status_subscription","parameters":[{"description":"Subscription identifier that was obtained from the create event subscription operation","explode":false,"in":"path","name":"subscriptionId","required":true,"schema":{"$ref":"#/components/schemas/SubscriptionId"},"style":"simple"},{"description":"Correlation id for the different services","explode":false,"in":"header","name":"x-correlator","required":false,"schema":{"example":"b4333c46-49c0-4f62-80d7-f0ef930f1c46","pattern":"^[a-zA-Z0-9-]{0,55}$","type":"string"},"style":"simple"}],"responses":{"202":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscriptionAsync"}}},"description":"Request accepted to be processed. It applies for async deletion process.","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"204":{"description":"event subscription deleted","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"400":{"content":{"application/json":{"examples":{"GENERIC_400_INVALID_ARGUMENT":{"description":"Invalid Argument. Generic Syntax Exception","value":{"code":"INVALID_ARGUMENT","message":"Client specified an invalid argument, request body or query param.","status":400}},"GENERIC_400_SUBSCRIPTION_ID_REQUIRED":{"description":"subscription id is required","value":{"code":"INVALID_ARGUMENT","message":"Expected property is missing: subscriptionId","status":400}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscriptionList_400_response"}}},"description":"Problem with the client request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"401":{"content":{"application/json":{"examples":{"GENERIC_401_AUTHENTICATION_REQUIRED":{"description":"New authentication is needed, authentication is no longer valid","value":{"code":"AUTHENTICATION_REQUIRED","message":"New authentication is required.","status":401}},"GENERIC_401_UNAUTHENTICATED":{"description":"Request cannot be authenticated","value":{"code":"UNAUTHENTICATED","message":"Request not authenticated due to missing, invalid, or expired credentials.","status":401}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscriptionList_401_response"}}},"description":"Authentication problem with the client request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"403":{"content":{"application/json":{"examples":{"GENERIC_403_PERMISSION_DENIED":{"description":"Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security","value":{"code":"PERMISSION_DENIED","message":"Client does not have sufficient permissions to perform this action.","status":403}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscriptionList_403_response"}}},"description":"Client does not have sufficient permission","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"404":{"content":{"application/json":{"examples":{"GENERIC_404_NOT_FOUND":{"description":"Resource is not found","value":{"code":"NOT_FOUND","message":"The specified resource is not found.","status":404}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscription_404_response"}}},"description":"Resource Not Found","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}}},"security":[{"openId":["device-reachability-status-subscriptions:delete"]}],"summary":"Delete a device reachability status event subscription for a device","tags":["Device reachability status subscription"],"x-openapi-router-controller":"openapi_server.controllers.device_reachability_status_subscription_controller"},"get":{"description":"Retrieve a given subscription by ID","operationId":"retrieve_device_reachability_status_subscription","parameters":[{"description":"Subscription identifier that was obtained from the create event subscription operation","explode":false,"in":"path","name":"subscriptionId","required":true,"schema":{"$ref":"#/components/schemas/SubscriptionId"},"style":"simple"},{"description":"Correlation id for the different services","explode":false,"in":"header","name":"x-correlator","required":false,"schema":{"example":"b4333c46-49c0-4f62-80d7-f0ef930f1c46","pattern":"^[a-zA-Z0-9-]{0,55}$","type":"string"},"style":"simple"}],"responses":{"200":{"content":{"application/json":{"examples":{"subscription-activation-requested":{"$ref":"#/components/examples/SUBSCRIPTION_ACTIVATION_REQUESTED"},"subscription-active":{"$ref":"#/components/examples/SUBSCRIPTION_ACTIVE"},"subscription-deleted":{"$ref":"#/components/examples/SUBSCRIPTION_DELETED"}},"schema":{"$ref":"#/components/schemas/Subscription"}}},"description":"OK","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"400":{"content":{"application/json":{"examples":{"GENERIC_400_INVALID_ARGUMENT":{"description":"Invalid Argument. Generic Syntax Exception","value":{"code":"INVALID_ARGUMENT","message":"Client specified an invalid argument, request body or query param.","status":400}},"GENERIC_400_SUBSCRIPTION_ID_REQUIRED":{"description":"subscription id is required","value":{"code":"INVALID_ARGUMENT","message":"Expected property is missing: subscriptionId","status":400}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscriptionList_400_response"}}},"description":"Problem with the client request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"401":{"content":{"application/json":{"examples":{"GENERIC_401_AUTHENTICATION_REQUIRED":{"description":"New authentication is needed, authentication is no longer valid","value":{"code":"AUTHENTICATION_REQUIRED","message":"New authentication is required.","status":401}},"GENERIC_401_UNAUTHENTICATED":{"description":"Request cannot be authenticated","value":{"code":"UNAUTHENTICATED","message":"Request not authenticated due to missing, invalid, or expired credentials.","status":401}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscriptionList_401_response"}}},"description":"Authentication problem with the client request","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"403":{"content":{"application/json":{"examples":{"GENERIC_403_PERMISSION_DENIED":{"description":"Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security","value":{"code":"PERMISSION_DENIED","message":"Client does not have sufficient permissions to perform this action.","status":403}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscriptionList_403_response"}}},"description":"Client does not have sufficient permission","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}},"404":{"content":{"application/json":{"examples":{"GENERIC_404_NOT_FOUND":{"description":"Resource is not found","value":{"code":"NOT_FOUND","message":"The specified resource is not found.","status":404}}},"schema":{"$ref":"#/components/schemas/retrieveDeviceReachabilityStatusSubscription_404_response"}}},"description":"Resource Not Found","headers":{"x-correlator":{"$ref":"#/components/headers/x-correlator"}}}},"security":[{"openId":["device-reachability-status-subscriptions:read"]}],"summary":"Retrieve a device reachability status event subscription for a device","tags":["Device reachability status subscription"],"x-openapi-router-controller":"openapi_server.controllers.device_reachability_status_subscription_controller"}}},"servers":[{"url":"/device-reachability-status-subscriptions/v0.7"}],"tags":[{"description":"Operation to manage event subscription on device reachability status event.","name":"Device reachability status subscription"}]}
